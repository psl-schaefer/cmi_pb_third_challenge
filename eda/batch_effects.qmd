---
title: "Batch Effects"
author: "Philipp Sven Lars Sch√§fer"
date: "`r format(Sys.time(), '%d %B, %Y')`"
editor: source
engine: knitr
---

# Packages

```{r}
suppressPackageStartupMessages({
  library(tidyverse)
  library(ggdark)
  library(factoextra)
  library(FactoMineR)
  library(magick) # formatting
})
knitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting

source(file.path("..", "src", "read_data.R"))
source(file.path("..", "src", "defaults.R"))
source(file.path("..", "src", "colors.R"))
```

# Data

```{r}
input_dir = file.path("..", "data")
```

```{r}
meta_data <- read_harmonized_meta_data(input_dir)
exp_data <- read_raw_experimental_data(input_dir)
exp_data <- filter_experimental_data(meta_data=meta_data, experimental_data=exp_data)

celltype_meta <- read_celltype_meta(input_dir)
gene_meta <- read_gene_meta(input_dir)
```

# Baseline (planned day 0)

```{r}
baseline_specimen <- meta_data %>%
  dplyr::filter(planned_day_relative_to_boost==0) %>%
  dplyr::pull(specimen_id)

baseline_wide_exp_data <- purrr::map(
  exp_data, ~ .x %>% dplyr::filter(specimen_id %in% baseline_specimen)) %>%
  generate_wide_experimental_data(., impute="zero")

# filter genes and normalize the gene expression data
min_counts <- 200
min_samples <- 20

genes_to_keep <- colnames(baseline_wide_exp_data$pbmc_gene_expression)[
  (colSums(baseline_wide_exp_data$pbmc_gene_expression) >= min_counts) &
    (colSums(baseline_wide_exp_data$pbmc_gene_expression > 0) >= min_samples)
]

target_sum <- 1e6
pbmc_gene_expression_norm <- 
  baseline_wide_exp_data$pbmc_gene_expression / rowSums(baseline_wide_exp_data$pbmc_gene_expression) * target_sum

stopifnot(all(dplyr::near(rowSums(pbmc_gene_expression_norm), target_sum, tol=0.1)))

pbmc_gene_expression_norm <- pbmc_gene_expression_norm[ , genes_to_keep]
pbmc_gene_expression_log <- log1p(pbmc_gene_expression_norm)

baseline_wide_exp_data$pbmc_gene_expression <- pbmc_gene_expression_log

purrr::map(baseline_wide_exp_data, ~ dim(.x))
```

```{r}
generate_pca_plots <- function(wide_exp_modality, meta_data) {
  # wide_exp_modality <- wide_exp_data$pbmc_cell_frequency
  set.seed(42)
  pca_out <- prcomp(wide_exp_modality, center=TRUE, retx=TRUE, scale.=TRUE)
  
  rownames(pca_out$rotation) <- colnames(wide_exp_modality)
  rownames(pca_out$x) <- rownames(wide_exp_modality)
  
  wide_exp_modality_df <- as.data.frame(wide_exp_modality) %>%
    tibble::rownames_to_column(var="specimen_id") %>%
    dplyr::mutate(specimen_id=as.integer(specimen_id))
  
  dataset_fill <- wide_exp_modality_df %>%
    dplyr::left_join(meta_data, by="specimen_id") %>%
    dplyr::pull(dataset)
  
  plot_df <- pca_out$x %>%
    as.data.frame() %>%
    rownames_to_column("specimen_id") %>%
    dplyr::mutate(specimen_id=as.integer(specimen_id)) %>%
    dplyr::left_join(wide_exp_modality_df, by="specimen_id") %>%
    dplyr::left_join(meta_data, by="specimen_id")

  var_contrib <- get_pca_var(pca_out)$contrib
  top_variables <- rowSums(var_contrib) %>%
    sort(decreasing=TRUE) %>%
    head(10) %>%
    names()
  
  p1 <- plot_df %>%
    ggplot() +
    geom_point(aes(x=PC1, y=PC2, color=dataset),
               alpha=0.5) + 
    coord_equal() +
    ggdark::dark_mode(verbose=FALSE)
  
  p2 <- plot_df %>%
    ggplot() +
    geom_point(aes(x=PC1, y=PC2, color=actual_day_relative_to_boost),
               alpha=0.5) + 
    coord_equal() +
    ggdark::dark_mode(verbose=FALSE) +
    scale_color_viridis_c()
  
  
  p3 <- plot_df %>%
    dplyr::select(dplyr::all_of(c("PC1", "PC2", top_variables))) %>%
    tidyr::pivot_longer(cols=dplyr::all_of(top_variables), 
                        values_to = "values",
                        names_to = "features") %>%
    ggplot() +
    geom_point(aes(x=PC1, y=PC2, color=values), alpha=0.5) + 
    facet_wrap(~features) +
    coord_equal() +
    ggdark::dark_mode(verbose=FALSE) +
    scale_color_viridis_c()
  
  p4 <- fviz_pca_biplot(pca_out, 
                  geom.ind = "point",
                  pointshape = 21,
                  pointsize = 2.5,
                  fill.ind = dataset_fill,
                  col.ind = "black",
                  repel = TRUE,
                  select.var = list(name = top_variables)
               ) +
    coord_equal() +
    ggdark::dark_mode(verbose=FALSE)
  return(
    list(p1=p1, p2=p2, p3=p3, p4=p4)
  )
}
```

## PBMC Fractions

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$pbmc_cell_frequency, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## PBMC Gene Expression

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$pbmc_gene_expression, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## Plasma Antibody Levels

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$plasma_ab_titer, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## Plasma Cytokine Concentration by Legendplex

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$plasma_cytokine_concentration_by_legendplex, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## Plasma Cytokine Concentration by Olink

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$plasma_cytokine_concentration_by_olink, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## T Cell Activation

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$t_cell_activation, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

## T Cell Polarization

```{r}
pca_plots <- 
  generate_pca_plots(baseline_wide_exp_data$t_cell_polarization, 
                     meta_data=meta_data)
```

```{r}
#| crop: true
pca_plots$p1
```

```{r}
#| crop: true
pca_plots$p2
```

```{r fig.width=10, fig.height=8}
#| crop: true
pca_plots$p3
```

```{r}
#| crop: true
pca_plots$p4
```

# Appendix

<button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" >Session Information</button><div id="collapseOne" class="accordion-collapse collapse"><div>

```{r}
sessionInfo()
```

</div></div>