[
  {
    "objectID": "eda/batch_effects.html",
    "href": "eda/batch_effects.html",
    "title": "Batch Effects",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))"
  },
  {
    "objectID": "eda/batch_effects.html#pbmc-fractions",
    "href": "eda/batch_effects.html#pbmc-fractions",
    "title": "Batch Effects",
    "section": "3.1 PBMC Fractions",
    "text": "3.1 PBMC Fractions\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$pbmc_cell_frequency, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#pbmc-gene-expression",
    "href": "eda/batch_effects.html#pbmc-gene-expression",
    "title": "Batch Effects",
    "section": "3.2 PBMC Gene Expression",
    "text": "3.2 PBMC Gene Expression\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$pbmc_gene_expression, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#plasma-antibody-levels",
    "href": "eda/batch_effects.html#plasma-antibody-levels",
    "title": "Batch Effects",
    "section": "3.3 Plasma Antibody Levels",
    "text": "3.3 Plasma Antibody Levels\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$plasma_ab_titer, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#plasma-cytokine-concentration-by-legendplex",
    "href": "eda/batch_effects.html#plasma-cytokine-concentration-by-legendplex",
    "title": "Batch Effects",
    "section": "3.4 Plasma Cytokine Concentration by Legendplex",
    "text": "3.4 Plasma Cytokine Concentration by Legendplex\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$plasma_cytokine_concentration_by_legendplex, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#plasma-cytokine-concentration-by-olink",
    "href": "eda/batch_effects.html#plasma-cytokine-concentration-by-olink",
    "title": "Batch Effects",
    "section": "3.5 Plasma Cytokine Concentration by Olink",
    "text": "3.5 Plasma Cytokine Concentration by Olink\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$plasma_cytokine_concentration_by_olink, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#t-cell-activation",
    "href": "eda/batch_effects.html#t-cell-activation",
    "title": "Batch Effects",
    "section": "3.6 T Cell Activation",
    "text": "3.6 T Cell Activation\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$t_cell_activation, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "eda/batch_effects.html#t-cell-polarization",
    "href": "eda/batch_effects.html#t-cell-polarization",
    "title": "Batch Effects",
    "section": "3.7 T Cell Polarization",
    "text": "3.7 T Cell Polarization\n\n\nCode\npca_plots &lt;- \n  generate_pca_plots(baseline_wide_exp_data$t_cell_polarization, \n                     meta_data=meta_data)\n\n\n\n\nCode\npca_plots$p1\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p3\n\n\n\n\n\n\n\n\n\n\n\nCode\npca_plots$p4"
  },
  {
    "objectID": "baseline_models/model_1.html",
    "href": "baseline_models/model_1.html",
    "title": "Baseline Models V1",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n  library(ranger)\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))"
  },
  {
    "objectID": "baseline_models/model_1.html#a",
    "href": "baseline_models/model_1.html#a",
    "title": "Baseline Models V1",
    "section": "3.1 1a",
    "text": "3.1 1a\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(demo_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(day_14), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  13 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       16.2515 \nR squared (OOB):                  0.4304134 \n\n\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(pbmc_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(day_14), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  40 \nMtry:                             6 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       24.20728 \nR squared (OOB):                  0.1515772 \n\n\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(demo_feature_names, pbmc_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(day_14), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  52 \nMtry:                             7 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       21.49207 \nR squared (OOB):                  0.2467406"
  },
  {
    "objectID": "baseline_models/model_1.html#b",
    "href": "baseline_models/model_1.html#b",
    "title": "Baseline Models V1",
    "section": "3.2 1b",
    "text": "3.2 1b\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(demo_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(fc), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  13 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       44.1938 \nR squared (OOB):                  0.3437689 \n\n\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(pbmc_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(fc), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  40 \nMtry:                             6 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       58.40528 \nR squared (OOB):                  0.1327435 \n\n\n\n\nCode\nset.seed(42)\nrf_model &lt;- ranger::ranger(x = df_all %&gt;%\n                             dplyr::select(dplyr::all_of(c(demo_feature_names, pbmc_feature_names, \"day_0\"))),\n                           y = df_all %&gt;%\n                             dplyr::pull(fc), \n                           importance = \"permutation\"\n)\n#rf_model$variable.importance\nrf_model$call &lt;- NULL\nrf_model\n\n\nRanger result\n\nCall:\n NULL \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      71 \nNumber of independent variables:  52 \nMtry:                             7 \nTarget node size:                 5 \nVariable importance mode:         permutation \nSplitrule:                        variance \nOOB prediction error (MSE):       58.82191 \nR squared (OOB):                  0.1265569 \n\n\n\n\nCode\ndf_all %&gt;%\n  ggplot(aes(x=day_0, y=fc)) +\n  geom_point() +\n  geom_smooth() +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n`geom_smooth()` using method = 'loess' and formula = 'y ~ x'"
  },
  {
    "objectID": "eda/test.html",
    "href": "eda/test.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source\n\n\n\n\nDifference between harmonized and raw data for PBMC cell frequency data\n\n\nCode\n# source(\"../src/read_data.R\")\n# \n# input_dir &lt;- \"../data\"\n# \n# meta_df &lt;- read_harmonized_meta_data(input_dir)\n# \n# raw_data &lt;- read_raw_experimental_data(input_dir)\n# harm_data &lt;- read_harmonized_experimental_data(input_dir)\n# \n# celltype_meta &lt;- read_celltype_meta(input_dir)\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::select(dataset, cell_type_name) %&gt;%\n#   dplyr::distinct() %&gt;%\n#   dplyr::left_join(celltype_meta, by=c(\"cell_type_name\", \"dataset\")) %&gt;%\n#   View()\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::filter(cell_type_name == \"CD45+\")\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::filter(dataset == \"2023_dataset\") %&gt;%\n#   dplyr::arrange(desc(percent_live_cell)) %&gt;%\n#   dplyr::left_join(celltype_meta, by=c(\"cell_type_name\", \"dataset\")) %&gt;%\n#   View()\n# \n# df_1 &lt;- raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::select(cell_type_name) %&gt;%\n#   dplyr::distinct() %&gt;%\n#   dplyr::mutate(\n#     in_harm_data = cell_type_name %in% harm_data$pbmc_cell_frequency$cell_type_name\n#     ) %&gt;%\n#   dplyr::arrange(in_harm_data)\n# \n# View(df_1)\n# \n# View(celltype_meta)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "1 Exploratory Data Analysis\n\nData Overview\nBatch Effects\n\n\n\n2 Models"
  },
  {
    "objectID": "eda/harmonize_data.html",
    "href": "eda/harmonize_data.html",
    "title": "Batch Effects",
    "section": "",
    "text": "1 Packages\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\n\n\n\n\n2 Data\n\n\nCode\ninput_dir = file.path(\"..\", \"data\")\n\n\n\n\nCode\nmeta_df &lt;- read_harmonized_meta_data(input_dir)\ndata_list &lt;- read_raw_experimental_data(input_dir)\ndata_list &lt;- filter_experimental_data(meta_data=meta_df, \n                                      experimental_data=data_list)\n\n\npbmc_cell_frequency | Removed 550 specimens because missing in meta data\n\n\nplasma_ab_titer | Removed 6931 specimens because missing in meta data\n\n\nplasma_cytokine_concentration_by_olink | Removed 495 specimens because missing in meta data\n\n\npbmc_cell_frequency | Removed 56 features because not in feature subset\n\n\nplasma_ab_titer | Removed 48 features because not in feature subset\n\n\nplasma_cytokine_concentration_by_olink | Removed 233 features because not in feature subset\n\n\nt_cell_polarization | Removed 3 features because not in feature subset\n\n\n\n\nCode\n((data_list$pbmc_cell_frequency %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(cell_type_name, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(cell_type_name) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::filter(cell_type_name %in% experimental_data_settings$pbmc_cell_frequency$feature_subset) %&gt;%\n  dplyr::pull(n)) == 4) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$pbmc_gene_expression %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(versioned_ensembl_gene_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(versioned_ensembl_gene_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) == 4) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$plasma_ab_titer %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(isotype_antigen, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  #dplyr::arrange(n, isotype_antigen, dataset) %&gt;%\n  dplyr::filter(isotype_antigen %in% experimental_data_settings$plasma_antibody_levels$feature_subset) %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n  \n((data_list$plasma_cytokine_concentration_by_legendplex %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) == 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  #dplyr::arrange(n, protein_id, dataset) %&gt;%\n  dplyr::filter(protein_id %in% experimental_data_settings$plasma_cytokine_concentration_by_olink$feature_subset) %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_activation %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_polarization %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_polarization %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation_protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation_protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()"
  },
  {
    "objectID": "eda/data_overview.html",
    "href": "eda/data_overview.html",
    "title": "Data Overview",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick)\n  library(ComplexHeatmap)\n  library(circlize)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))"
  },
  {
    "objectID": "eda/data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "href": "eda/data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "title": "Data Overview",
    "section": "4.1 How many subjects do we have per dataset / per partition?",
    "text": "4.1 How many subjects do we have per dataset / per partition?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, dataset, partition, infancy_vac) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::count(dataset, partition, infancy_vac) %&gt;%\n  ggplot(aes(x = n, y = dataset, fill = infancy_vac, color = partition)) +\n  geom_col(position = position_dodge(width = 0.9), width = 0.7, alpha=0.5) +  \n  geom_text(aes(label = n), \n            position = position_dodge(width = 0.9),  \n            hjust = -0.2, vjust = 0.5, size = 3, color = \"white\") +\n  scale_fill_manual(values = infancy_vac_colors) +\n  scale_color_manual(values = partition_colors) +\n  ggdark::dark_mode(verbose = FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-age-range",
    "href": "eda/data_overview.html#what-is-the-age-range",
    "title": "Data Overview",
    "section": "4.2 What is the age range",
    "text": "4.2 What is the age range\n\n\nCode\nmeta_data %&gt;%\n  ggplot() + \n  geom_histogram(aes(x=age_at_boost, fill=dataset, y=after_stat(density)), \n                 color=\"black\", position=\"identity\", bins=30) +\n  facet_wrap(~dataset) +\n  scale_fill_manual(values=dataset_colors) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "href": "eda/data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "title": "Data Overview",
    "section": "5.1 What is the difference between planned and actual booster administration",
    "text": "5.1 What is the difference between planned and actual booster administration\n\n\nCode\nmeta_data %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=diff_relative_to_boost), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "href": "eda/data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "title": "Data Overview",
    "section": "5.2 What is the difference between planned and actual for the baseline",
    "text": "5.2 What is the difference between planned and actual for the baseline\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  dplyr::mutate(`diff_&gt;_15` = abs(actual_day_relative_to_boost) &gt; 15) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=actual_day_relative_to_boost, fill=`diff_&gt;_15`), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#how-many-time-points-do-we-have-per-subject",
    "href": "eda/data_overview.html#how-many-time-points-do-we-have-per-subject",
    "title": "Data Overview",
    "section": "5.3 How many time points do we have per subject?",
    "text": "5.3 How many time points do we have per subject?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::count(dataset, subject_id) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset),color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)"
  },
  {
    "objectID": "eda/data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "href": "eda/data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "title": "Data Overview",
    "section": "5.4 How many assays do we have for the baseline measurement?",
    "text": "5.4 How many assays do we have for the baseline measurement?\n\n\nCode\nassays_per_specimen &lt;- purrr::imap(exp_data, ~ .x %&gt;% \n              dplyr::select(specimen_id) %&gt;%\n              dplyr::distinct() %&gt;%\n              dplyr::mutate(assay=.y)) %&gt;%\n  dplyr::bind_rows() %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, assay, subject_id, planned_day_relative_to_boost, infancy_vac, dataset)\n\nassays_per_specimen %&gt;%\n  dplyr::count(subject_id, planned_day_relative_to_boost, dataset, specimen_id) %&gt;%\n  dplyr::filter(!is.na(subject_id)) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset), color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)\n\n\n\n\n\n\n\n\n\n\n\nCode\nfor (day in c(0, 1, 3, 14)) {\n  \nannotation_data &lt;- meta_data %&gt;%\n  dplyr::select(specimen_id, planned_day_relative_to_boost, infancy_vac, \n                dataset, biological_sex) %&gt;%\n  dplyr::filter(specimen_id %in% assays_per_specimen$specimen_id) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost == !!day) %&gt;% \n  dplyr::select(- planned_day_relative_to_boost) %&gt;%\n  dplyr::arrange(dataset, infancy_vac, biological_sex) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  dplyr::select(dataset, infancy_vac, biological_sex)\n\nheatmap_data &lt;- assays_per_specimen %&gt;%\n  dplyr::select(specimen_id, assay) %&gt;%\n  dplyr::mutate(value = 1) %&gt;%\n  tidyr::pivot_wider(names_from=\"assay\", values_from=\"value\") %&gt;%\n  mutate(across(everything(), .fns = ~replace_na(.,0))) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  as.matrix() %&gt;%\n  t()\n\ncolnames(heatmap_data) &lt;- as.character(colnames(heatmap_data))\nheatmap_data &lt;- heatmap_data[, rownames(annotation_data)]\n\n# Create the heatmap\nht &lt;- Heatmap(heatmap_data, \n              name = \"heatmap\", \n              row_title = \"\", \n              column_title = paste0(\"Specimens for Planned Day \", day),\n              col = colorRamp2(c(0, 1), c(\"white\", \"black\")),\n              cluster_rows = FALSE,\n              cluster_columns = FALSE,\n              show_row_names = TRUE, \n              show_column_names = FALSE,\n              width = unit(16, \"cm\"),\n              top_annotation = ComplexHeatmap::HeatmapAnnotation(df = annotation_data,\n                                    col = list(\n                                      \"dataset\" = dataset_colors,\n                                      \"infancy_vac\" = infancy_vac_colors,\n                                      \"biological_sex\" = sex_colors\n                                    ),\n                                    which=\"column\")\n)\n\ndraw(ht, \n     heatmap_legend_side = \"top\",\n     annotation_legend_side = \"top\",\n     show_heatmap_legend = FALSE # don't show colorbar\n     )\n}"
  },
  {
    "objectID": "eda/data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "href": "eda/data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "title": "Data Overview",
    "section": "6.1 How many subjects can we use to construct training data?",
    "text": "6.1 How many subjects can we use to construct training data?\n\n6.1.1 1) Antibody Level Tasks (anti-PT 14 days after booster)\n\nAll but 7 people were assayed approximately 14 days after the booster administration\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_1_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n                                     dplyr::left_join(exp_data$plasma_ab_titer,\n                                                      by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(isotype_antigen==\"IgG_PT\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_1_possible_total = sum(task_1_possible), \n                   task_1_possible_fraction = mean(task_1_possible))\n\n\n\n  \n\n\n\n\n\n6.1.2 2) Cell Frequency Tasks (Monocytes 1 day after booster)\n\nBut there is one person where it does not really make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_cell_frequency, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(cell_type_name==\"Monocytes\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))\n\n\n\n  \n\n\n\n\n\n6.1.3 3) Gene Expression Tasks (CCL3 expression 3 days after booster)\n\nThere are 7 people for which this task does nto make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nall_genes &lt;- unique(exp_data$pbmc_gene_expression$versioned_ensembl_gene_id)\nccl3_ensembl &lt;- \"ENSG00000277632\"\nccl3_ensembl_versioned &lt;- all_genes[str_starts(all_genes, ccl3_ensembl)]\n\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_gene_expression, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(versioned_ensembl_gene_id==ccl3_ensembl_versioned) %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))"
  },
  {
    "objectID": "eda/data_overview.html#how-many-na-values-do-we-have-per-assay",
    "href": "eda/data_overview.html#how-many-na-values-do-we-have-per-assay",
    "title": "Data Overview",
    "section": "7.1 How many NA values do we have per assay?",
    "text": "7.1 How many NA values do we have per assay?\n\n\nCode\nvalue_vars_per_modality &lt;- list(\n  \"pbmc_cell_frequency\" = c(\"percent_live_cell\"),\n  \"pbmc_gene_expression\" = c(\"raw_count\", \"tpm\"),\n  \"plasma_ab_titer\" = c(\"MFI\", \"MFI_normalised\"),\n  \"plasma_cytokine_concentration_by_legendplex\" = c(\"concentration\"),\n  \"plasma_cytokine_concentration_by_olink\" = c(\"concentration\"),\n  \"t_cell_activation\" = c(\"analyte_percentages\"),\n  \"t_cell_polarization\" = c(\"analyte_counts\")\n)\n\npurrr::imap_dfr(exp_data, function(df, modality) {\n  purrr::map_dfr(value_vars_per_modality[[modality]], \n                 ~ tibble(modality = modality,\n                          value_vars = .x,\n                          sum_na = sum(is.na(df[[.x]]))))\n})"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "href": "eda/data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "title": "Data Overview",
    "section": "7.2 What is the fraction of NA values in the PBMC Cell Type Frequencies",
    "text": "7.2 What is the fraction of NA values in the PBMC Cell Type Frequencies\n\n7.2.1 Per Cell Type\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(cell_type_name) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(cell_type_name = factor(cell_type_name, levels=rev(cell_type_name))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=cell_type_name, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Cell Type\")\n\n\n\n\n\n\n\n\n\n\n\n7.2.2 Per Cell Specimen\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\nSo there are 5 specimen with more than 20% NA, which are all from the same subject!\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::filter(frac_na &gt; 0.2) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\")"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "href": "eda/data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "title": "Data Overview",
    "section": "7.3 What is the fraction of NA values in the Olink Data?",
    "text": "7.3 What is the fraction of NA values in the Olink Data?\n\n7.3.1 Per Protein\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(protein_id = factor(protein_id, levels=rev(protein_id))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=protein_id, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Protein\")\n\n\n\n\n\n\n\n\n\n\n\n7.3.2 Per Specimen\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::filter(frac_na &gt; 0.2) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, frac_na, subject_id, dataset, \n                actual_day_relative_to_boost, planned_day_relative_to_boost)"
  },
  {
    "objectID": "eda/data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "href": "eda/data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "title": "Data Overview",
    "section": "8.1 How does the quality control for Olink look like?",
    "text": "8.1 How does the quality control for Olink look like?\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::count(quality_control)\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)\n\n\n\n  \n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_legendplex %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)"
  },
  {
    "objectID": "eda/data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "href": "eda/data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "title": "Data Overview",
    "section": "8.2 How often is the Cytokine Concentration below the LOD in Olink",
    "text": "8.2 How often is the Cytokine Concentration below the LOD in Olink\n\n\nCode\n# check how often is it below the limit of detection?\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::count(below_lod)"
  },
  {
    "objectID": "eda/data_overview.html#what-is-the-fraction-of-unspecific-antibody-measurements",
    "href": "eda/data_overview.html#what-is-the-fraction-of-unspecific-antibody-measurements",
    "title": "Data Overview",
    "section": "8.3 What is the fraction of unspecific antibody measurements",
    "text": "8.3 What is the fraction of unspecific antibody measurements\n\n8.3.1 Per Isotype-Antigen\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(bins=30, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), bins=30, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\n8.3.2 Per Specimen\nSo in some specimen we have non-specific antibody measurements? What does that mean?\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#nk",
    "href": "eda/data_overview.html#nk",
    "title": "Data Overview",
    "section": "9.1 NK",
    "text": "9.1 NK\nThere are 3 types of NK cells:\n\nNK cells (CD3-CD19-CD56+): CD19-CD3-CD56+/++\nNK: CD19-CD3-CD56+\nCD56high NK cells: CD19-CD3-CD56++\n\nAnd I don’t know what to do with that information!"
  },
  {
    "objectID": "eda/data_overview.html#no-gating-info-for-2023",
    "href": "eda/data_overview.html#no-gating-info-for-2023",
    "title": "Data Overview",
    "section": "9.2 No Gating Info for 2023",
    "text": "9.2 No Gating Info for 2023\n\nI just assume it is the same as in 2022, but this might not be true since the data look so different"
  },
  {
    "objectID": "eda/data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "href": "eda/data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "title": "Data Overview",
    "section": "9.3 No Gating Info for Basophils and CD19 in 2020",
    "text": "9.3 No Gating Info for Basophils and CD19 in 2020\n\nI just assume it is the same as in 2021 and 2022"
  },
  {
    "objectID": "eda/data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "href": "eda/data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "title": "Data Overview",
    "section": "9.4 No Gating Info for non-pDCs at all",
    "text": "9.4 No Gating Info for non-pDCs at all\nNot sure how to fix this)\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level)) %&gt;%\n  dplyr::select(dataset, cell_type_name) %&gt;%\n  dplyr::distinct()"
  },
  {
    "objectID": "eda/data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "href": "eda/data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "title": "Data Overview",
    "section": "9.5 Should the Proportions sum up to 1 at level 0?",
    "text": "9.5 Should the Proportions sum up to 1 at level 0?\n\nTrying to take the hierarchical information into account, it still does not make sense\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/data_overview.html#difference-in-2023-dataset",
    "href": "eda/data_overview.html#difference-in-2023-dataset",
    "title": "Data Overview",
    "section": "9.6 Difference in 2023 Dataset",
    "text": "9.6 Difference in 2023 Dataset\n\nIt seems like the 2023 data are very very different, which makes me hesitant to use it for any kind of predictions on the challenge data. E.g. just looking at level 0 which should make sense I get the following\n\n\n\nCode\n# first check for NAs for the levels\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level))\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nEspecially, when completely ignoring the hierarchy in the gating information, I would expect to have more than 100% in percelt_live_cell_sum, but this is not true for the specimens from the 2023 dataset\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nOr what I use a list of predefined cell types of interest?"
  }
]