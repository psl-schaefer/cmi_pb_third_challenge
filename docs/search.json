[
  {
    "objectID": "eda/raw_data_overview.html",
    "href": "eda/raw_data_overview.html",
    "title": "Data Overview",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick)\n  library(ComplexHeatmap)\n  library(circlize)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "href": "eda/raw_data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "title": "Data Overview",
    "section": "4.1 How many subjects do we have per dataset / per partition?",
    "text": "4.1 How many subjects do we have per dataset / per partition?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, dataset, partition, infancy_vac) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::count(dataset, partition, infancy_vac) %&gt;%\n  ggplot(aes(x = n, y = dataset, fill = infancy_vac, color = partition)) +\n  geom_col(position = position_dodge(width = 0.9), width = 0.7, alpha=0.5) +  \n  geom_text(aes(label = n), \n            position = position_dodge(width = 0.9),  \n            hjust = -0.2, vjust = 0.5, size = 3, color = \"white\") +\n  scale_fill_manual(values = infancy_vac_colors) +\n  scale_color_manual(values = partition_colors) +\n  ggdark::dark_mode(verbose = FALSE)"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-age-range",
    "href": "eda/raw_data_overview.html#what-is-the-age-range",
    "title": "Data Overview",
    "section": "4.2 What is the age range",
    "text": "4.2 What is the age range\n\n\nCode\np1 &lt;- meta_data %&gt;%\n  ggplot() + \n  geom_histogram(aes(x=age_at_boost, fill=dataset, y=after_stat(density)), \n                 color=\"black\", position=\"identity\", bins=30, show.legend=FALSE) +\n  facet_wrap(~dataset) +\n  scale_fill_manual(values=dataset_colors) +\n  ggdark::dark_mode(verbose=FALSE)\n\np2 &lt;- meta_data %&gt;%\n  ggplot() +\n  geom_violin(aes(y=dataset, x=age_at_boost, fill=dataset)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_fill_manual(values=dataset_colors)\n\ncowplot::plot_grid(p1, p2, ncol=2, rel_widths=c(1.5,1))"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "href": "eda/raw_data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "title": "Data Overview",
    "section": "5.1 What is the difference between planned and actual booster administration",
    "text": "5.1 What is the difference between planned and actual booster administration\n\n\nCode\nmeta_data %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=diff_relative_to_boost), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "href": "eda/raw_data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "title": "Data Overview",
    "section": "5.2 What is the difference between planned and actual for the baseline",
    "text": "5.2 What is the difference between planned and actual for the baseline\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  dplyr::mutate(`diff_&gt;_15` = abs(actual_day_relative_to_boost) &gt; 15) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=actual_day_relative_to_boost, fill=`diff_&gt;_15`), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-many-time-points-do-we-have-per-subject",
    "href": "eda/raw_data_overview.html#how-many-time-points-do-we-have-per-subject",
    "title": "Data Overview",
    "section": "5.3 How many time points do we have per subject?",
    "text": "5.3 How many time points do we have per subject?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::count(dataset, subject_id) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset),color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "href": "eda/raw_data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "title": "Data Overview",
    "section": "5.4 How many assays do we have for the baseline measurement?",
    "text": "5.4 How many assays do we have for the baseline measurement?\n\n\nCode\nassays_per_specimen &lt;- purrr::imap(exp_data, ~ .x %&gt;% \n              dplyr::select(specimen_id) %&gt;%\n              dplyr::distinct() %&gt;%\n              dplyr::mutate(assay=.y)) %&gt;%\n  dplyr::bind_rows() %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, assay, subject_id, planned_day_relative_to_boost, infancy_vac, dataset)\n\nassays_per_specimen %&gt;%\n  dplyr::count(subject_id, planned_day_relative_to_boost, dataset, specimen_id) %&gt;%\n  dplyr::filter(!is.na(subject_id)) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset), color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)\n\n\n\n\n\n\n\n\n\n\n\nCode\nfor (day in c(0, 1, 3, 14)) {\n  \nannotation_data &lt;- meta_data %&gt;%\n  dplyr::select(specimen_id, planned_day_relative_to_boost, infancy_vac, \n                dataset, biological_sex) %&gt;%\n  dplyr::filter(specimen_id %in% assays_per_specimen$specimen_id) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost == !!day) %&gt;% \n  dplyr::select(- planned_day_relative_to_boost) %&gt;%\n  dplyr::arrange(dataset, infancy_vac, biological_sex) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  dplyr::select(dataset, infancy_vac, biological_sex)\n\nheatmap_data &lt;- assays_per_specimen %&gt;%\n  dplyr::select(specimen_id, assay) %&gt;%\n  dplyr::mutate(value = 1) %&gt;%\n  tidyr::pivot_wider(names_from=\"assay\", values_from=\"value\") %&gt;%\n  mutate(across(everything(), .fns = ~replace_na(.,0))) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  as.matrix() %&gt;%\n  t()\n\ncolnames(heatmap_data) &lt;- as.character(colnames(heatmap_data))\nheatmap_data &lt;- heatmap_data[, rownames(annotation_data)]\n\n# Create the heatmap\nht &lt;- Heatmap(heatmap_data, \n              name = \"heatmap\", \n              row_title = \"\", \n              column_title = paste0(\"Specimens for Planned Day \", day),\n              col = colorRamp2(c(0, 1), c(\"white\", \"black\")),\n              cluster_rows = FALSE,\n              cluster_columns = FALSE,\n              show_row_names = TRUE, \n              show_column_names = FALSE,\n              width = unit(16, \"cm\"),\n              top_annotation = ComplexHeatmap::HeatmapAnnotation(df = annotation_data,\n                                    col = list(\n                                      \"dataset\" = dataset_colors,\n                                      \"infancy_vac\" = infancy_vac_colors,\n                                      \"biological_sex\" = sex_colors\n                                    ),\n                                    which=\"column\")\n)\n\ndraw(ht, \n     heatmap_legend_side = \"top\",\n     annotation_legend_side = \"top\",\n     show_heatmap_legend = FALSE # don't show colorbar\n     )\n}"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-large-is-the-variance-in-the-baseline-measurements",
    "href": "eda/raw_data_overview.html#how-large-is-the-variance-in-the-baseline-measurements",
    "title": "Data Overview",
    "section": "5.5 How large is the variance in the baseline measurements?",
    "text": "5.5 How large is the variance in the baseline measurements?\n\n\nCode\nplot_time_course &lt;- function(experimental_data, modality) {\n  #experimental_data &lt;- exp_data; modality &lt;- \"pbmc_cell_frequency\"\n  \n  modality_settings &lt;- experimental_data_settings[[modality]]\n  feature_col &lt;- modality_settings$feature_col\n  value_col &lt;- modality_settings$value_col\n  \n  plot_df &lt;- experimental_data[[modality]] %&gt;%\n    dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n    dplyr::filter(planned_day_relative_to_boost &lt;= 0)\n  \n  # only keep datasets for which we have more than one time point\n  datasets_to_keep &lt;- plot_df %&gt;%\n    dplyr::select(dataset, planned_day_relative_to_boost) %&gt;%\n    dplyr::distinct() %&gt;%\n    dplyr::group_by(dataset) %&gt;%\n    dplyr::summarize(n = n()) %&gt;%\n    dplyr::filter(n &gt; 1) %&gt;%\n    dplyr::pull(dataset)\n  \n  plot_df &lt;- plot_df %&gt;%\n    dplyr::filter(dataset %in% datasets_to_keep)\n  \n  if (\"feature_subset\" %in% names(modality_settings)) {\n    plot_df &lt;- plot_df %&gt;% \n      dplyr::filter(.data[[feature_col]] %in% modality_settings$feature_subset)\n  }\n  plot_df &lt;- plot_df %&gt;%\n    dplyr::mutate(specimen_id = factor(specimen_id))\n  \n  # check for significant slopes?\n  pvals &lt;- purrr::map_dfr(unique(plot_df$dataset), function(d) {\n    purrr::map_dfr(unique(plot_df[[feature_col]]), function(f) {\n      # d=plot_df$dataset[1]; f=plot_df[[feature_col]][1]\n      model_df &lt;- plot_df %&gt;%\n        dplyr::filter(dataset==d, .data[[feature_col]]==f)\n      lin_model &lt;- lm(formula=paste0(value_col, \" ~ planned_day_relative_to_boost\"),\n         data = model_df)\n      tibble(dataset=d, feature=f, pval=summary(lin_model)$coefficients[2, 4])\n    })\n  }) %&gt;%\n    dplyr::mutate(padj = stats::p.adjust(pval))\n  pvals %&gt;%\n    dplyr::filter(padj &lt; 0.05) %&gt;%\n    print()\n  \n  p1 &lt;- plot_df %&gt;%\n    dplyr::group_by(subject_id, .data[[feature_col]]) %&gt;%\n    dplyr::summarize(min_feat = min(.data[[value_col]]),\n                     max_feat = max(.data[[value_col]]),\n                     mean_feat = mean(.data[[value_col]]),\n                     sd_feat = sd(.data[[value_col]]),\n                     .groups = \"drop\") %&gt;%\n    dplyr::mutate(cv = sd_feat / mean_feat) %&gt;%\n    ggplot() +\n    geom_violin(aes(y=.data[[feature_col]], x=cv)) +\n    ggdark::dark_mode() +\n    labs(x=\"Coefficient of Variation (CV)\")\n  \n  p2 &lt;- plot_df %&gt;%\n    ggplot(aes(x=planned_day_relative_to_boost, y=.data[[value_col]])) +\n    geom_point(aes(color=dataset), alpha=0.5) +\n    geom_line(aes(group=subject_id), alpha=0.5) +\n    facet_wrap(~.data[[feature_col]], scales=\"free_y\") +\n    geom_smooth(aes(color=dataset), method=\"lm\", formula = 'y ~ x') +\n    ggdark::dark_mode()\n  return(list(p1=p1, p2=p2))\n}\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"pbmc_cell_frequency\")\n\n\n# A tibble: 1 x 4\n  dataset      feature      pval   padj\n  &lt;chr&gt;        &lt;chr&gt;       &lt;dbl&gt;  &lt;dbl&gt;\n1 2022_dataset Monocytes 0.00169 0.0338\n\n\n$p1\n\n\n\n\n\n\n\n\n\n\n$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"plasma_ab_titer\")\n\n\n# A tibble: 0 x 4\n# i 4 variables: dataset &lt;chr&gt;, feature &lt;chr&gt;, pval &lt;dbl&gt;, padj &lt;dbl&gt;\n\n\n$p1\n\n\n\n\n\n\n\n\n\n\n$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"plasma_cytokine_concentration_by_legendplex\")\n\n\n# A tibble: 0 x 4\n# i 4 variables: dataset &lt;chr&gt;, feature &lt;chr&gt;, pval &lt;dbl&gt;, padj &lt;dbl&gt;\n\n\n$p1\n\n\n\n\n\n\n\n\n\n\n$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"plasma_cytokine_concentration_by_olink\")\n\n\n# A tibble: 0 x 4\n# i 4 variables: dataset &lt;chr&gt;, feature &lt;chr&gt;, pval &lt;dbl&gt;, padj &lt;dbl&gt;\n\n\n$p1\n\n\nWarning: Removed 65 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n\n$p2\n\n\nWarning: Removed 67 rows containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 67 rows containing missing values or values outside the scale range\n(`geom_point()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"t_cell_activation\")\n\n\n# A tibble: 0 x 4\n# i 4 variables: dataset &lt;chr&gt;, feature &lt;chr&gt;, pval &lt;dbl&gt;, padj &lt;dbl&gt;\n\n\n$p1\n\n\n\n\n\n\n\n\n\n\n$p2\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_time_course(experimental_data=exp_data, modality=\"t_cell_polarization\")\n\n\n# A tibble: 0 x 4\n# i 4 variables: dataset &lt;chr&gt;, feature &lt;chr&gt;, pval &lt;dbl&gt;, padj &lt;dbl&gt;\n\n\n$p1\n\n\nWarning: Removed 39 rows containing non-finite outside the scale range\n(`stat_ydensity()`).\n\n\n\n\n\n\n\n\n\n\n$p2"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "href": "eda/raw_data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "title": "Data Overview",
    "section": "6.1 How many subjects can we use to construct training data?",
    "text": "6.1 How many subjects can we use to construct training data?\n\n6.1.1 1) Antibody Level Tasks (anti-PT 14 days after booster)\n\nAll but 7 people were assayed approximately 14 days after the booster administration\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_1_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n                                     dplyr::left_join(exp_data$plasma_ab_titer,\n                                                      by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(isotype_antigen==\"IgG_PT\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_1_possible_total = sum(task_1_possible), \n                   task_1_possible_fraction = mean(task_1_possible))\n\n\n\n  \n\n\n\n\n\n6.1.2 2) Cell Frequency Tasks (Monocytes 1 day after booster)\n\nBut there is one person where it does not really make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_cell_frequency, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(cell_type_name==\"Monocytes\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))\n\n\n\n  \n\n\n\n\n\n6.1.3 3) Gene Expression Tasks (CCL3 expression 3 days after booster)\n\nThere are 7 people for which this task does nto make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nall_genes &lt;- unique(exp_data$pbmc_gene_expression$versioned_ensembl_gene_id)\nccl3_ensembl &lt;- \"ENSG00000277632\"\nccl3_ensembl_versioned &lt;- all_genes[str_starts(all_genes, ccl3_ensembl)]\n\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_gene_expression, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(versioned_ensembl_gene_id==ccl3_ensembl_versioned) %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-many-na-values-do-we-have-per-assay",
    "href": "eda/raw_data_overview.html#how-many-na-values-do-we-have-per-assay",
    "title": "Data Overview",
    "section": "7.1 How many NA values do we have per assay?",
    "text": "7.1 How many NA values do we have per assay?\n\n\nCode\npurrr::imap(exp_data, function(df, modality) {\n  feature_col &lt;- experimental_data_settings[[modality]]$feature_col\n  value_col &lt;- experimental_data_settings[[modality]]$value_col\n  tibble(modality = modality, feature_col = feature_col, sum_na = sum(is.na(df[[value_col]])))\n}) %&gt;%\n  dplyr::bind_rows()"
  },
  {
    "objectID": "eda/raw_data_overview.html#wide-format",
    "href": "eda/raw_data_overview.html#wide-format",
    "title": "Data Overview",
    "section": "7.2 Wide format",
    "text": "7.2 Wide format\n\n\nCode\npurrr::imap_dfr(generate_wide_experimental_data(experimental_data=exp_data, \n                                                impute=NULL),\n                  function(mtx, modality) {\n                    rmeans &lt;- rowMeans(is.na(mtx))\n                    tibble(modality=modality, \n                           subject_id = names(rmeans), \n                           na_frac=rmeans)\n           }) %&gt;%\n  dplyr::group_by(modality) %&gt;%\n  dplyr::summarise(mean_na_frac = mean(na_frac))\n\n\nWarning: Values from `MFI` are not uniquely identified; output will contain list-cols.\n* Use `values_fn = list` to suppress this warning.\n* Use `values_fn = {summary_fun}` to summarise duplicates.\n* Use the following dplyr code to identify duplicates.\n  {data} |&gt;\n  dplyr::summarise(n = dplyr::n(), .by = c(specimen_id, isotype_antigen)) |&gt;\n  dplyr::filter(n &gt; 1L)"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "href": "eda/raw_data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "title": "Data Overview",
    "section": "7.3 What is the fraction of NA values in the PBMC Cell Type Frequencies",
    "text": "7.3 What is the fraction of NA values in the PBMC Cell Type Frequencies\n\n7.3.1 Per Cell Type\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(cell_type_name) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(cell_type_name = factor(cell_type_name, levels=rev(cell_type_name))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=cell_type_name, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Cell Type\")\n\n\n\n\n\n\n\n\n\n\n\n7.3.2 Per Specimen\nSo there are 5 specimen with more than 20% NA, which are all from the same subject!\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "href": "eda/raw_data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "title": "Data Overview",
    "section": "7.4 What is the fraction of NA values in the Olink Data?",
    "text": "7.4 What is the fraction of NA values in the Olink Data?\n\n7.4.1 Per Protein\nAfter excluding Q969D9, the largest fraction of NA values is about 5% which is acceptable I guess.\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(protein_id = factor(protein_id, levels=rev(protein_id))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=protein_id, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Protein\")\n\n\n\n\n\n\n\n\n\n\n\n7.4.2 Per Specimen\nThere are 6 specimen with more than 50% NA values, I am not sure whether I should exclude those?\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::filter(frac_na &gt; 0.2) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, frac_na, subject_id, dataset, \n                actual_day_relative_to_boost, planned_day_relative_to_boost)"
  },
  {
    "objectID": "eda/raw_data_overview.html#plasma_ab_titer",
    "href": "eda/raw_data_overview.html#plasma_ab_titer",
    "title": "Data Overview",
    "section": "8.1 plasma_ab_titer",
    "text": "8.1 plasma_ab_titer\n\nSee also: https://discuss.cmi-pb.org/t/multiple-units-in-the-ab-titer-table/57/3\n\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(dataset, unit)"
  },
  {
    "objectID": "eda/raw_data_overview.html#plasma_cytokine_concentration_by_olink",
    "href": "eda/raw_data_overview.html#plasma_cytokine_concentration_by_olink",
    "title": "Data Overview",
    "section": "8.2 plasma_cytokine_concentration_by_olink",
    "text": "8.2 plasma_cytokine_concentration_by_olink\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(dataset, unit)"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "href": "eda/raw_data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "title": "Data Overview",
    "section": "9.1 How does the quality control for Olink look like?",
    "text": "9.1 How does the quality control for Olink look like?\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::count(quality_control)\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)\n\n\n\n  \n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_legendplex %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)"
  },
  {
    "objectID": "eda/raw_data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "href": "eda/raw_data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "title": "Data Overview",
    "section": "9.2 How often is the Cytokine Concentration below the LOD in Olink",
    "text": "9.2 How often is the Cytokine Concentration below the LOD in Olink\n\n\nCode\n# check how often is it below the limit of detection?\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::count(below_lod)\n\n\n\n  \n\n\n\n\n\nCode\nset.seed(1)\np1 &lt;- exp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::mutate(qc_warning = quality_control == \"Warning\") %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarize(mean_below_lod = mean(below_lod, na.rm=TRUE),\n                   mean_qc_warning = mean(qc_warning, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(cytokine_uniprot_mapping, by=\"protein_id\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = mean_below_lod, y = mean_qc_warning)) +\n  ggrepel::geom_text_repel(aes(x = mean_below_lod, y = mean_qc_warning, \n                      label = ifelse(mean_below_lod &gt; 0.2, protein_id, '')),\n                  max.overlaps = Inf, color=\"grey\") + # This ensures all labels are shown\n  ggdark::dark_mode()\n\np2 &lt;- exp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::mutate(qc_warning = quality_control == \"Warning\") %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarize(mean_below_lod = mean(below_lod, na.rm=TRUE),\n                   mean_qc_warning = mean(qc_warning, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(cytokine_uniprot_mapping, by=\"protein_id\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = mean_below_lod, y = mean_qc_warning)) +\n  ggrepel::geom_text_repel(aes(x = mean_below_lod, y = mean_qc_warning, \n                      label = ifelse(mean_below_lod &gt; 0.2, cytokine, '')),\n                  max.overlaps = Inf, color=\"grey\") + # This ensures all labels are shown\n  ggdark::dark_mode()\n\ncowplot::plot_grid(p1, p2, ncol=2)\n\n\n\n\n\n\n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::filter(protein_id %in% c(\"P60568\"))\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::mutate(below_lod = MFI &lt; lower_limit_of_detection) %&gt;%\n  dplyr::pull(below_lod) %&gt;%\n  mean(na.rm=TRUE)\n\n\n[1] 0.2994199"
  },
  {
    "objectID": "eda/raw_data_overview.html#what-is-the-fraction-of-antigen-specific-antibody-measurements",
    "href": "eda/raw_data_overview.html#what-is-the-fraction-of-antigen-specific-antibody-measurements",
    "title": "Data Overview",
    "section": "9.3 What is the fraction of antigen-specific antibody measurements",
    "text": "9.3 What is the fraction of antigen-specific antibody measurements\n\n9.3.1 Per Isotype-Antigen\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(bins=30, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), bins=30, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  dplyr::arrange(is_antigen_specific_fraction)\n\n\n\n  \n\n\n\nSo the top entry makes sense, IgE_Total does not refer to any specific antigen\n\n\n9.3.2 Per Specimen\nSo in some specimen we have non-specific antibody measurements? What does that mean?\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\n9.3.3 Per Year\nSo this is very weird. For 2021, no antibody measurement is antigen-specific? Maybe this is a bug!\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarize(mean_is_antigen_specific = mean(is_antigen_specific))"
  },
  {
    "objectID": "eda/raw_data_overview.html#nk",
    "href": "eda/raw_data_overview.html#nk",
    "title": "Data Overview",
    "section": "10.1 NK",
    "text": "10.1 NK\nThere are 3 types of NK cells:\n\nNK cells (CD3-CD19-CD56+): CD19-CD3-CD56+/++\nNK: CD19-CD3-CD56+\nCD56high NK cells: CD19-CD3-CD56++\n\nAnd I don’t know what to do with that information!"
  },
  {
    "objectID": "eda/raw_data_overview.html#no-gating-info-for-2023",
    "href": "eda/raw_data_overview.html#no-gating-info-for-2023",
    "title": "Data Overview",
    "section": "10.2 No Gating Info for 2023",
    "text": "10.2 No Gating Info for 2023\n\nI just assume it is the same as in 2022, but this might not be true since the data look so different"
  },
  {
    "objectID": "eda/raw_data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "href": "eda/raw_data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "title": "Data Overview",
    "section": "10.3 No Gating Info for Basophils and CD19 in 2020",
    "text": "10.3 No Gating Info for Basophils and CD19 in 2020\n\nI just assume it is the same as in 2021 and 2022"
  },
  {
    "objectID": "eda/raw_data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "href": "eda/raw_data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "title": "Data Overview",
    "section": "10.4 No Gating Info for non-pDCs at all",
    "text": "10.4 No Gating Info for non-pDCs at all\nNot sure how to fix this)\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level)) %&gt;%\n  dplyr::select(dataset, cell_type_name) %&gt;%\n  dplyr::distinct()"
  },
  {
    "objectID": "eda/raw_data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "href": "eda/raw_data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "title": "Data Overview",
    "section": "10.5 Should the Proportions sum up to 1 at level 0?",
    "text": "10.5 Should the Proportions sum up to 1 at level 0?\n\nTrying to take the hierarchical information into account, it still does not make sense\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/raw_data_overview.html#difference-in-2023-dataset",
    "href": "eda/raw_data_overview.html#difference-in-2023-dataset",
    "title": "Data Overview",
    "section": "10.6 Difference in 2023 Dataset",
    "text": "10.6 Difference in 2023 Dataset\n\nIt seems like the 2023 data are very very different, which makes me hesitant to use it for any kind of predictions on the challenge data. E.g. just looking at level 0 which should make sense I get the following\n\n\n\nCode\n# first check for NAs for the levels\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level))\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nEspecially, when completely ignoring the hierarchy in the gating information, I would expect to have more than 100% in percelt_live_cell_sum, but this is not true for the specimens from the 2023 dataset\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nOr what I use a list of predefined cell types of interest?"
  },
  {
    "objectID": "eda/targets.html",
    "href": "eda/targets.html",
    "title": "Prediction Targets",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(magick)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))"
  },
  {
    "objectID": "eda/targets.html#task-1-antibody-level-tasks",
    "href": "eda/targets.html#task-1-antibody-level-tasks",
    "title": "Prediction Targets",
    "section": "4.1 Task 1) Antibody level tasks",
    "text": "4.1 Task 1) Antibody level tasks\n\n1.1) Rank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\n1.2) Rank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\n\n\n\nCode\ntargets_task_1 &lt;- generate_targets_task_1(meta_data=meta_data, \n                                          experimental_data=experimental_data, \n                                          experimental_data_settings=experimental_data_settings, \n                                          specimen_list=specimen_list)\n\n\n\n\nCode\nplot_targets(targets_task_1)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_1 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task11), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_1 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task12), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_1 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_density(aes(x=task12)) +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()"
  },
  {
    "objectID": "eda/targets.html#task-2-cell-frequency-tasks",
    "href": "eda/targets.html#task-2-cell-frequency-tasks",
    "title": "Prediction Targets",
    "section": "4.2 Task 2) Cell frequency tasks",
    "text": "4.2 Task 2) Cell frequency tasks\n\n2.1) Rank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\n2.2) Rank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\n\n\n\nCode\ntargets_task_2 &lt;- generate_targets_task_2(meta_data=meta_data, \n                                          experimental_data=experimental_data, \n                                          experimental_data_settings=experimental_data_settings,\n                                          specimen_list=specimen_list)\ntargets_task_2\n\n\n\n  \n\n\n\n\n\nCode\nplot_targets(targets_task_2)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_2 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task21), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_2 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task22), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_2 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_density(aes(x=task22)) +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()"
  },
  {
    "objectID": "eda/targets.html#task-3-gene-expression-tasks",
    "href": "eda/targets.html#task-3-gene-expression-tasks",
    "title": "Prediction Targets",
    "section": "4.3 Task 3) Gene expression tasks",
    "text": "4.3 Task 3) Gene expression tasks\n\n3.1) Rank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\n3.2) Rank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\n\n\n\nCode\ntargets_task_3 &lt;- generate_targets_task_3(meta_data=meta_data, \n                                          experimental_data=experimental_data, \n                                          experimental_data_settings=experimental_data_settings, \n                                          specimen_list=specimen_list,\n                                          gene_meta=gene_meta)\ntargets_task_3\n\n\n\n  \n\n\n\n\n\nCode\nplot_targets(targets_task_3)\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_3 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task31), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_3 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_density(aes(x=log10(task31))) +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_3 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=task32), bins=50, color=\"black\") +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()\n\n\n\n\n\n\n\n\n\n\n\nCode\ntargets_task_2 %&gt;%\n  dplyr::left_join((meta_data %&gt;% dplyr::select(subject_id, dataset) %&gt;% dplyr::distinct()),\n                   by=\"subject_id\") %&gt;%\n  ggplot() +\n  geom_density(aes(x=task22)) +\n  facet_wrap(~dataset, ncol=1) + \n  ggdark::dark_mode()"
  },
  {
    "objectID": "models/literature_model.html",
    "href": "models/literature_model.html",
    "title": "Literature Models",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(DESeq2)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nknitr::opts_knit$set(output.dir = \"./\")\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))"
  },
  {
    "objectID": "models/literature_model.html#task-1.1",
    "href": "models/literature_model.html#task-1.1",
    "title": "Literature Models",
    "section": "4.1 Task 1.1",
    "text": "4.1 Task 1.1\nRank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\n\n4.1.1 inflammatory response (M33)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.640.080.3402022_dataset0.440.420.031\n\n\n\n\n4.1.2 platelet activation (III) (M42)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.64-0.040.5862022_dataset0.44-0.030.546\n\n\n\n\n4.1.3 BCR signaling (M54)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.64-0.210.8902022_dataset0.44-0.080.651\n\n\n\n\n4.1.4 Random_1\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.640.000.5202022_dataset0.44-0.110.663\n\n\n\n\n4.1.5 Random_2\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.64-0.170.8252022_dataset0.44-0.360.934\n\n\n\n\n4.1.6 Random_3\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset0.640.150.1902022_dataset0.44-0.120.696"
  },
  {
    "objectID": "models/literature_model.html#task-1.2",
    "href": "models/literature_model.html#task-1.2",
    "title": "Literature Models",
    "section": "4.2 Task 1.2",
    "text": "4.2 Task 1.2\nRank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\n\n4.2.1 inflammatory response (M33)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.730.090.3042022_dataset-0.89-0.010.524\n\n\n\n\n4.2.2 platelet activation (III) (M42)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.730.060.3542022_dataset-0.890.270.136\n\n\n\n\n4.2.3 BCR signaling (M54)\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.73-0.090.6912022_dataset-0.890.010.480\n\n\n\n\n4.2.4 Random_1\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.730.030.4322022_dataset-0.890.040.423\n\n\n\n\n4.2.5 Random_2\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.730.160.1762022_dataset-0.89-0.110.688\n\n\n\n\n4.2.6 Random_3\n\n\ndatasetsrho_baselinesrho_signaturesrho_pval_signature2021_dataset-0.73-0.090.7202022_dataset-0.890.180.226"
  },
  {
    "objectID": "models/feature_selection.html",
    "href": "models/feature_selection.html",
    "title": "Single-Omic Models After Normalization",
    "section": "",
    "text": "1 Packages\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))\n\n\n\n\n2 Data\n\n\nCode\ninput_dir = file.path(\"..\", \"data\")\n\n\n\n\nCode\ncelltype_meta &lt;- read_celltype_meta(input_dir)\ngene_meta &lt;- read_gene_meta_plus(input_dir)\nprotein_meta &lt;- read_protein_meta(input_dir)\n\nmeta_data &lt;- read_harmonized_meta_data(input_dir)\nspecimen_per_day &lt;- get_specimen_per_day(meta_data=meta_data)\n\nRECOMPUTE &lt;- FALSE\nif (RECOMPUTE) {\n  source(file.path(\"..\", \"src\", \"normalize_integrate.R\"))\n  \n  raw_experimental_data &lt;- read_raw_experimental_data(input_dir)\n  \n  filtered_experimental_data &lt;- filter_experimental_data(\n    meta_data=meta_data, \n    experimental_data=raw_experimental_data,\n    gene_meta=gene_meta)\n  \n  write_rds(filtered_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"filtered_experimental_data.RDS\"))\n  \n  normalized_experimental_data &lt;- normalize_experimental_data(\n    meta_data=meta_data, \n    raw_experimental_data=filtered_experimental_data,\n    gene_meta=gene_meta)\n  \n  write_rds(normalized_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"normalized_experimental_data.RDS\"))\n  \n  integrated_experimental_data &lt;- integrate_experimental_data(\n    meta_data=meta_data, \n    normalized_experimental_data=normalized_experimental_data)\n  \n  write_rds(integrated_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"integrated_experimental_data.RDS\"))\n\n  # use raw/filtered experimental data for computation of targets\n  target_list &lt;- generate_all_targets(\n    meta_data=meta_data, \n    experimental_data=filtered_experimental_data, \n    experimental_data_settings=experimental_data_settings, \n    gene_meta=gene_meta,\n    protein_meta=protein_meta\n    )\n  \n  write_rds(target_list, \n          file = file.path(input_dir, \"prc_datasets\", \n                           \"target_list.RDS\"))\n  \n  rm(raw_experimental_data, filtered_experimental_data)\n  experimental_data &lt;- integrated_experimental_data\n} else {\n  normalized_experimental_data &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                                            \"normalized_experimental_data.RDS\"))\n  integrated_experimental_data &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                                            \"integrated_experimental_data.RDS\"))\n  target_list &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                           \"target_list.RDS\"))\n}\n\n\n\n\nCode\nexperimental_data_list &lt;- list(\n  \"normalized_experimental_data\" = normalized_experimental_data,\n  \"integrated_experimental_data\" = integrated_experimental_data\n) %&gt;%\n  # do not use raw or integrated counts\n  purrr::map(., ~ .x[-which(names(.x) == \"pbmc_gene_expression_counts\")])\n\nexperimental_predictors_list &lt;- \n  purrr::map(experimental_data_list, ~ generate_wide_experimental_data(experimental_data=.x,\n                                                                       impute=\"median\", \n                                                                       verbose=TRUE))\n\nN_HVG &lt;- 1000\n\nhvg &lt;- gene_meta %&gt;% \n  dplyr::slice_max(mean_rank, n=N_HVG)\n\nfor (experimental_predictors in experimental_predictors_list) {\n  experimental_predictors$pbmc_gene_expression &lt;- \n    experimental_predictors$pbmc_gene_expression[, hvg$versioned_ensembl_gene_id_clean]\n}\n\nnames(normalized_experimental_data)\n\n\n[1] \"pbmc_cell_frequency\"                        \n[2] \"pbmc_gene_expression\"                       \n[3] \"pbmc_gene_expression_counts\"                \n[4] \"plasma_ab_titer\"                            \n[5] \"plasma_cytokine_concentration_by_legendplex\"\n[6] \"plasma_cytokine_concentration_by_olink\"     \n[7] \"t_cell_activation\"                          \n[8] \"t_cell_polarization\"                        \n\n\nCode\nnames(integrated_experimental_data)\n\n\n[1] \"pbmc_cell_frequency\"                        \n[2] \"pbmc_gene_expression\"                       \n[3] \"pbmc_gene_expression_counts\"                \n[4] \"plasma_ab_titer\"                            \n[5] \"plasma_cytokine_concentration_by_legendplex\"\n[6] \"plasma_cytokine_concentration_by_olink\"     \n[7] \"t_cell_activation\"                          \n[8] \"t_cell_polarization\"                        \n\n\n\n\nCode\ntask_meta &lt;- list(\n  task_11 = list(\n    name = \"task_11\",\n    header = \"## Task 1.1\",\n    description = \"Rank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\"\n  ),\n  task_12 = list(\n    name = \"task_12\",\n    header = \"## Task 1.2\",\n    description = \"Rank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\"\n  ),\n  task_21 = list(\n    name = \"task_21\",\n    header = \"## Task 2.1\",\n    description = \"Rank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\"\n  ),\n  task_22 = list(\n    name = \"task_22\",\n    header = \"## Task 2.2\",\n    description = \"Rank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\"\n  ),\n  task_31 = list(\n    name = \"task_31\",\n    header = \"## Task 3.1\",\n    description = \"Rank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\"\n  ),\n  task_32 = list(\n    name = \"task_32\",\n    header = \"## Task 3.2\",\n    description = \"Rank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\"\n  ),\n  task_41 = list(\n    name = \"task_41\",\n    header = \"## Task 4.1\",\n    description = \"Rank the individuals based on their Th1/Th2 (IFN-g/IL-5) polarization ratio on Day 30 post-booster vaccination.\"\n  )\n)\n\n\n\n\n3 Loop\n\nOver all tasks\n\nOver all modalities\n\nOver all datasets\n\n\n\n\n\nCode\nset.seed(42)\n\ntransformed_data_name &lt;- \"integrated_experimental_data\"\ntibble_list &lt;- list()\n\nfor (task in task_meta) {\n  # task &lt;- task_meta[[3]]\n  cat(paste0(\"\\n\\n-\", task$name, \"\\n\\n\"))\n  for (modality in names(experimental_predictors_list[[transformed_data_name]])) {\n    # modality &lt;- names(experimental_predictors)[1]\n    cat(paste0(\"\\n\\n-- \", modality, \"\\n\\n\"))\n    for (dset in unique(specimen_per_day$day_1$dataset)) {\n      # dset &lt;- unique(specimen_per_day$day_0$dataset)[1]\n      cat(paste0(\"\\n\\n--- \", dset, \"\\n\\n\"))\n      modality_data &lt;- experimental_predictors_list[[transformed_data_name]][[modality]] %&gt;%\n        as.data.frame() %&gt;% \n        tibble::rownames_to_column(\"specimen_id\") %&gt;%\n        dplyr::mutate(specimen_id = as.numeric(specimen_id)) %&gt;%\n        dplyr::left_join((specimen_per_day$day_0 %&gt;% \n                            dplyr::select(subject_id, specimen_id, dataset)),\n                         by=\"specimen_id\") %&gt;%\n        dplyr::filter(!is.na(subject_id)) %&gt;%\n        dplyr::filter(dataset == !!dset) %&gt;%\n        dplyr::select(-c(specimen_id, dataset))\n      \n      model_df &lt;- target_list[[task$name]] %&gt;%\n        dplyr::left_join(modality_data, by=\"subject_id\") %&gt;%\n         tidyr::drop_na()\n      \n      # problematic if we have too few instances\n      if (nrow(model_df) &lt; 15) {\n        cat(\"Skipping ...\")\n        next\n      } else {\n        cat(\"Boruta running ...\")\n        boruta_out &lt;- Boruta::Boruta(target ~ .,\n                                     # not considering baseline since we include anyway\n                                     model_df %&gt;% dplyr::select(-c(subject_id, baseline)),\n                                     maxRuns=10000,\n                                     num.trees=1000 # use more trees to be sure?\n                                     )\n        out &lt;- tibble::tibble(\n          task = task$name,\n          modality = modality,\n          dataset = dset,\n          feature = names(boruta_out$finalDecision),\n          boruta_decision = boruta_out$finalDecision,\n          n_data = nrow(model_df)\n        )\n        tibble_list &lt;- rlist::list.append(tibble_list, out)\n      }\n    }\n  }\n}\n\n\n\n\n-task_11\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-task_12\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\n\n\n\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-task_21\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-task_22\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-task_31\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nBoruta running ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-task_32\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nBoruta running ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\n\n\n\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\n\n\n\n\n-task_41\n\n\n\n-- pbmc_cell_frequency\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- pbmc_gene_expression\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- plasma_ab_titer\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\nWarning in addShadowsAndGetImp(decReg, runs): getImp result contains NA(s) or\nNaN(s); replacing with 0(s), yet this is suspicious.\n\n\n\n\n-- plasma_cytokine_concentration_by_legendplex\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nSkipping ...\n\n-- plasma_cytokine_concentration_by_olink\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nSkipping ...\n\n-- t_cell_activation\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n-- t_cell_polarization\n\n\n\n--- 2020_dataset\n\nSkipping ...\n\n--- 2021_dataset\n\nBoruta running ...\n\n--- 2022_dataset\n\nBoruta running ...\n\n\nCode\ndf &lt;- tibble_list %&gt;% dplyr::bind_rows()\n\n\n\n\nCode\nn_data_df &lt;- df %&gt;%\n  dplyr::select(task, modality, n_data, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  tidyr::pivot_wider(names_from=dataset, values_from=n_data, \n                     names_prefix=\"n_samples_in_\")\n\ndf_boruta &lt;- df %&gt;%\n  dplyr::select(-n_data) %&gt;%\n  dplyr::mutate(\n    boruta_decision = dplyr::case_when(\n      boruta_decision == \"Confirmed\" ~ 1,\n      boruta_decision == \"Rejected\" ~ 0,\n      boruta_decision == \"Tentative\" ~ NA\n    )\n  ) %&gt;%\n  tidyr::pivot_wider(names_from=dataset, values_from=boruta_decision, \n                     names_prefix=\"in_\") %&gt;%\n  mutate(n_confirmed = rowSums(select(., matches(\"^in_[0-9]+_dataset\")), na.rm=TRUE)) %&gt;%\n  mutate(mean_confirmed = rowMeans(select(., matches(\"^in_[0-9]+_dataset\")), na.rm=TRUE)) %&gt;%\n  dplyr::filter(n_confirmed &gt; 0) %&gt;%\n  dplyr::arrange(task, modality, desc(mean_confirmed)) %&gt;%\n  dplyr::mutate(orig_feature = dplyr::case_when(\n    modality == \"pbmc_gene_expression\" ~ \n      dplyr::pull(gene_meta, gene_symbol, versioned_ensembl_gene_id_clean)[feature],\n    modality %in% c(\"plasma_cytokine_concentration_by_legendplex\", \"plasma_cytokine_concentration_by_olink\") ~\n      dplyr::pull(protein_meta, cytokine, uniprot_id)[feature],\n    modality == \"t_cell_polarization\" ~\n      paste0(purrr::map_chr(str_split(feature, \"_\"), ~ .x[1]), \"_\",\n             dplyr::pull(protein_meta, cytokine, uniprot_id)[purrr::map_chr(str_split(feature, \"_\"), ~ .x[2])]),\n    TRUE ~ feature\n  )) %&gt;%\n  dplyr::left_join(n_data_df, by=c(\"task\", \"modality\")) %&gt;%\n  dplyr::mutate(task = factor(task,\n                              levels = paste0(rep(paste0(\"task_\", 1:4), each=2), \n                                              rep(1:2, 4))))\n  \n\nwrite_rds(df_boruta, \n        file = file.path(input_dir, \"prc_datasets\", \n                         \"df_boruta.RDS\"))\n\ndf_boruta\n\n\n\n  \n\n\n\n\n\nCode\ndf_boruta %&gt;%\n  \n  ggplot() +\n  geom_bar(aes(y=task, fill=modality), width=0.5, color=\"black\") + \n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Number of Features\")"
  },
  {
    "objectID": "models/single_omic_after_integration.html",
    "href": "models/single_omic_after_integration.html",
    "title": "Single-Omic Models After Integration",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-1.1",
    "href": "models/single_omic_after_integration.html#task-1.1",
    "title": "Single-Omic Models After Integration",
    "section": "5.1 Task 1.1",
    "text": "5.1 Task 1.1\nRank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\n\n5.1.1 metadata model\n\n\nmodemser2srhooob20,918,7570.820.79\n\n\n\n\nmodemser2srholoocv20,556,4720.830.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.320.020.44332020222021-0.330.050.642033\n\n\n\n\n5.1.2 pbmc_cell_frequency\nRemoving 3 targets because training data is missing\n\n\nmodemser2srhooob27,473,5480.770.65\n\n\n\n\nmodemser2srholoocv28,733,2960.760.72\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.140.070.44302020222021-0.300.040.632030\n\n\n\n\n5.1.3 pbmc_gene_expression\n\n\nmodemser2srhooob10,978,7540.910.73\n\n\n\n\nmodemser2srholoocv10,967,8910.910.71\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.200.110.443320202220210.350.070.642033\n\n\n\n\n5.1.4 plasma_ab_titer\n\n\nmodemser2srhooob28,988,9230.750.67\n\n\n\n\nmodemser2srholoocv29,877,6450.750.64\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.130.060.44332020222021-0.030.050.642033\n\n\n\n\n5.1.5 plasma_cytokine_concentration_by_legendplex\nRemoving 4 targets because training data is missing\n\n\nmodemser2srhooob16,199,0370.860.76\n\n\n\n\nmodemser2srholoocv16,019,4960.860.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.300.060.483118202220210.030.030.611831\n\n\n\n\n5.1.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob51,577,1610.560.72\n\n\n\n\nmodemser2srholoocv49,430,3770.580.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.360.040.52331820222021-0.210.040.641833\n\n\n\n\n5.1.7 t_cell_activation\n\n\nmodemser2srhooob18,494,0280.840.7\n\n\n\n\nmodemser2srholoocv18,533,9600.840.7\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.220.040.44332020222021-0.140.030.642033\n\n\n\n\n5.1.8 t_cell_polarization\nRemoving 12 targets because training data is missing\n\n\nmodemser2srhooob25,089,6180.770.66\n\n\n\n\nmodemser2srholoocv24,179,1560.770.65\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.520.070.34261520222021-0.180.030.661526"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-1.2",
    "href": "models/single_omic_after_integration.html#task-1.2",
    "title": "Single-Omic Models After Integration",
    "section": "5.2 Task 1.2",
    "text": "5.2 Task 1.2\nRank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\n\n5.2.1 metadata model\n\n\nmodemser2srhooob0.370.630.83\n\n\n\n\nmodemser2srholoocv0.380.630.81\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.390.03-0.893320202220210.120.02-0.732033\n\n\n\n\n5.2.2 pbmc_cell_frequency\nRemoving 3 targets because training data is missing\n\n\nmodemser2srhooob0.510.50.74\n\n\n\n\nmodemser2srholoocv0.550.470.73\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.010.08-0.893020202220210.080.03-0.772030\n\n\n\n\n5.2.3 pbmc_gene_expression\n\n\nmodemser2srhooob0.730.280.45\n\n\n\n\nmodemser2srholoocv0.730.280.46\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.040.13-0.89332020222021-0.090.07-0.732033\n\n\n\n\n5.2.4 plasma_ab_titer\n\n\nmodemser2srhooob0.470.540.78\n\n\n\n\nmodemser2srholoocv0.460.550.8\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.320.04-0.893320202220210.350.04-0.732033\n\n\n\n\n5.2.5 plasma_cytokine_concentration_by_legendplex\nRemoving 4 targets because training data is missing\n\n\nmodemser2srhooob0.550.410.64\n\n\n\n\nmodemser2srholoocv0.550.410.65\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.010.06-0.89311820222021-0.200.02-0.691831\n\n\n\n\n5.2.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob0.690.310.7\n\n\n\n\nmodemser2srholoocv0.660.340.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.220.04-0.933318202220210.170.05-0.731833\n\n\n\n\n5.2.7 t_cell_activation\n\n\nmodemser2srhooob0.460.550.75\n\n\n\n\nmodemser2srholoocv0.480.530.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.040.03-0.89332020222021-0.020.05-0.732033\n\n\n\n\n5.2.8 t_cell_polarization\nRemoving 12 targets because training data is missing\n\n\nmodemser2srhooob0.560.460.7\n\n\n\n\nmodemser2srholoocv0.530.490.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.160.06-0.912615202220210.260.04-0.721526"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-2.1",
    "href": "models/single_omic_after_integration.html#task-2.1",
    "title": "Single-Omic Models After Integration",
    "section": "5.3 Task 2.1",
    "text": "5.3 Task 2.1\nRank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\n\n5.3.1 metadata model\n\n\nmodemser2srhooob64.450.340.59\n\n\n\n\nmodemser2srholoocv63.730.340.59\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.530.040.881233202020220.130.060.551221202120200.720.040.813312202120220.490.020.553321202220200.200.040.812112202220210.600.010.882133\n\n\n\n\n5.3.2 pbmc_cell_frequency\n\n\nmodemser2srhooob50.790.480.7\n\n\n\n\nmodemser2srholoocv50.610.480.7\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.810.020.881233202020220.540.020.551221202120200.720.020.813312202120220.580.020.553321202220200.610.040.812112202220210.820.010.882133\n\n\n\n\n5.3.3 pbmc_gene_expression\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob82.520.160.34\n\n\n\n\nmodemser2srholoocv82.460.160.35\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.190.040.881133202020220.370.150.551121202120200.760.070.843311202120220.560.040.553321202220200.230.300.842111202220210.420.170.882133\n\n\n\n\n5.3.4 plasma_ab_titer\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob75.540.220.43\n\n\n\n\nmodemser2srholoocv75.940.220.47\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.240.050.553021202220210.320.060.882130\n\n\n\n\n5.3.5 plasma_cytokine_concentration_by_legendplex\nRemoving 20 targets because training data is missing\n\n\nmodemser2srhooob63.890.340.56\n\n\n\n\nmodemser2srholoocv66.660.310.53\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.250.060.532818202220210.810.020.871828\n\n\n\n\n5.3.6 plasma_cytokine_concentration_by_olink\nRemoving 14 targets because training data is missing\n\n\nmodemser2srhooob66.350.30.49\n\n\n\n\nmodemser2srholoocv65.970.30.51\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.130.050.55331920222021-0.100.060.881933\n\n\n\n\n5.3.7 t_cell_activation\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob58.860.380.6\n\n\n\n\nmodemser2srholoocv57.110.40.6\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.470.020.603120202220210.750.010.872031\n\n\n\n\n5.3.8 t_cell_polarization\nRemoving 25 targets because training data is missing\n\n\nmodemser2srhooob68.760.310.6\n\n\n\n\nmodemser2srholoocv69.470.310.58\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.330.030.542516202220210.720.030.861625"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-2.2",
    "href": "models/single_omic_after_integration.html#task-2.2",
    "title": "Single-Omic Models After Integration",
    "section": "5.4 Task 2.2",
    "text": "5.4 Task 2.2\nRank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\n\n5.4.1 metadata model\n\n\nmodemser2srhooob0.11-0.04-0.04\n\n\n\n\nmodemser2srholoocv0.11-0.030\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.110.03-0.22123320202022-0.310.02-0.211221202120200.520.03-0.43331220212022-0.310.04-0.21332120222020-0.440.04-0.432112202220210.000.03-0.222133\n\n\n\n\n5.4.2 pbmc_cell_frequency\n\n\nmodemser2srhooob0.11-0.010.1\n\n\n\n\nmodemser2srholoocv0.11-0.010.12\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.390.03-0.221233202020220.130.04-0.211221202120200.160.06-0.433312202120220.150.04-0.213321202220200.180.04-0.432112202220210.090.02-0.222133\n\n\n\n\n5.4.3 pbmc_gene_expression\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob0.080.270.53\n\n\n\n\nmodemser2srholoocv0.080.270.53\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.010.05-0.22113320202022-0.220.20-0.211121202120200.040.10-0.313311202120220.280.11-0.21332120222020-0.260.21-0.312111202220210.210.10-0.222133\n\n\n\n\n5.4.4 plasma_ab_titer\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.030.18\n\n\n\n\nmodemser2srholoocv0.08-0.020.19\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.210.04-0.213021202220210.090.05-0.232130\n\n\n\n\n5.4.5 plasma_cytokine_concentration_by_legendplex\nRemoving 20 targets because training data is missing\n\n\nmodemser2srhooob0.060.140.41\n\n\n\n\nmodemser2srholoocv0.060.160.43\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.050.07-0.272818202220210.040.05-0.251828\n\n\n\n\n5.4.6 plasma_cytokine_concentration_by_olink\nRemoving 14 targets because training data is missing\n\n\nmodemser2srhooob0.070.090.1\n\n\n\n\nmodemser2srholoocv0.070.080.02\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.170.06-0.28331920222021-0.120.03-0.221933\n\n\n\n\n5.4.7 t_cell_activation\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.090.11\n\n\n\n\nmodemser2srholoocv0.08-0.10.09\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.20.02-0.163120202220210.00.04-0.232031\n\n\n\n\n5.4.8 t_cell_polarization\nRemoving 25 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.120.06\n\n\n\n\nmodemser2srholoocv0.08-0.120.07\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.000.07-0.292516202220210.130.03-0.241625"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-3.1",
    "href": "models/single_omic_after_integration.html#task-3.1",
    "title": "Single-Omic Models After Integration",
    "section": "5.5 Task 3.1",
    "text": "5.5 Task 3.1\nRank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\n\n5.5.1 metadata model\n\n\nmodemser2srhooob10.180.46\n\n\n\n\nmodemser2srholoocv10.180.46\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.350.020.57263620202022-0.060.040.532621202120200.010.030.273626202120220.380.050.53362120222020-0.010.020.272126202220210.400.020.572136\n\n\n\n\n5.5.2 pbmc_cell_frequency\nRemoving 18 targets because training data is missing\n\n\nmodemser2srhooob10.150.33\n\n\n\n\nmodemser2srholoocv1.030.130.32\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.400.030.59113320202022-0.130.070.531121202120200.050.080.223311202120220.120.030.533321202220200.040.040.22211120222021-0.030.050.592133\n\n\n\n\n5.5.3 pbmc_gene_expression\n\n\nmodemser2srhooob0.910.260.54\n\n\n\n\nmodemser2srholoocv0.90.260.55\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.090.040.57263620202022-0.270.110.53262120212020-0.200.050.273626202120220.550.090.533621202220200.100.100.272126202220210.440.130.572136\n\n\n\n\n5.5.4 plasma_ab_titer\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob0.940.120.35\n\n\n\n\nmodemser2srholoocv0.910.160.41\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.170.060.533321202220210.180.040.582133\n\n\n\n\n5.5.5 plasma_cytokine_concentration_by_legendplex\nRemoving 34 targets because training data is missing\n\n\nmodemser2srhooob1.050.050.23\n\n\n\n\nmodemser2srholoocv1.060.040.24\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.220.080.533118202220210.300.040.601831\n\n\n\n\n5.5.6 plasma_cytokine_concentration_by_olink\nRemoving 28 targets because training data is missing\n\n\nmodemser2srhooob1.230.060.21\n\n\n\n\nmodemser2srholoocv1.270.040.12\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.010.050.60361920222021-0.090.040.571936\n\n\n\n\n5.5.7 t_cell_activation\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob10.180.46\n\n\n\n\nmodemser2srholoocv10.180.45\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.530.020.533420202220210.180.030.612034\n\n\n\n\n5.5.8 t_cell_polarization\nRemoving 40 targets because training data is missing\n\n\nmodemser2srhooob1.040.170.39\n\n\n\n\nmodemser2srholoocv1.030.170.37\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.480.030.462716202220210.160.040.721627"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-3.2",
    "href": "models/single_omic_after_integration.html#task-3.2",
    "title": "Single-Omic Models After Integration",
    "section": "5.6 Task 3.2",
    "text": "5.6 Task 3.2\nRank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\n\n5.6.1 metadata model\n\n\nmodemser2srhooob1.140.010.1\n\n\n\n\nmodemser2srholoocv1.1500.08\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.210.01-0.43263620202022-0.260.03-0.19262120212020-0.160.02-0.33362620212022-0.080.05-0.19362120222020-0.350.02-0.332126202220210.160.05-0.432136\n\n\n\n\n5.6.2 pbmc_cell_frequency\nRemoving 18 targets because training data is missing\n\n\nmodemser2srhooob0.9600\n\n\n\n\nmodemser2srholoocv0.97-0.01-0.05\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.260.03-0.37113320202022-0.130.04-0.19112120212020-0.180.10-0.43331120212022-0.170.04-0.19332120222020-0.270.03-0.432111202220210.040.04-0.372133\n\n\n\n\n5.6.3 pbmc_gene_expression\n\n\nmodemser2srhooob1.130.020.23\n\n\n\n\nmodemser2srholoocv1.150.010.22\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.060.05-0.43263620202022-0.010.06-0.192621202120200.450.03-0.333626202120220.020.15-0.19362120222020-0.100.13-0.332126202220210.480.08-0.432136\n\n\n\n\n5.6.4 plasma_ab_titer\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob1.260.080.34\n\n\n\n\nmodemser2srholoocv1.260.080.37\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.420.04-0.193321202220210.460.02-0.522133\n\n\n\n\n5.6.5 plasma_cytokine_concentration_by_legendplex\nRemoving 34 targets because training data is missing\n\n\nmodemser2srhooob1.370.04-0.01\n\n\n\n\nmodemser2srholoocv1.360.050.01\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.210.04-0.183118202220210.320.04-0.541831\n\n\n\n\n5.6.6 plasma_cytokine_concentration_by_olink\nRemoving 28 targets because training data is missing\n\n\nmodemser2srhooob1.280.050.21\n\n\n\n\nmodemser2srholoocv1.270.060.22\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.290.10-0.123619202220210.150.05-0.431936\n\n\n\n\n5.6.7 t_cell_activation\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob1.30.020.29\n\n\n\n\nmodemser2srholoocv1.230.080.34\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.210.04-0.243420202220210.400.01-0.452034\n\n\n\n\n5.6.8 t_cell_polarization\nRemoving 40 targets because training data is missing\n\n\nmodemser2srhooob1.51-0.150.04\n\n\n\n\nmodemser2srholoocv1.49-0.130.04\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.240.05-0.282716202220210.090.04-0.371627"
  },
  {
    "objectID": "models/single_omic_after_integration.html#task-4.1",
    "href": "models/single_omic_after_integration.html#task-4.1",
    "title": "Single-Omic Models After Integration",
    "section": "5.7 Task 4.1",
    "text": "5.7 Task 4.1\nRank the individuals based on their Th1/Th2 (IFN-g/IL-5) polarization ratio on Day 30 post-booster vaccination.\n\n5.7.1 metadata model\n\n\nmodemser2srhooob4.520.030.21\n\n\n\n\nmodemser2srholoocv4.530.030.18\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.470.050.742716202220210.530.020.551627\n\n\n\n\n5.7.2 pbmc_cell_frequency\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob4.340.080.39\n\n\n\n\nmodemser2srholoocv4.250.10.42\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.480.030.742516202220210.670.010.621625\n\n\n\n\n5.7.3 pbmc_gene_expression\n\n\nmodemser2srhooob5-0.070.08\n\n\n\n\nmodemser2srholoocv5.1-0.090.04\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.060.120.742716202220210.190.150.551627\n\n\n\n\n5.7.4 plasma_ab_titer\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob5.05-0.06-0.06\n\n\n\n\nmodemser2srholoocv5.1-0.07-0.13\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.400.040.742616202220210.190.030.561626\n\n\n\n\n5.7.5 plasma_cytokine_concentration_by_legendplex\nRemoving 5 targets because training data is missing\n\n\nmodemser2srhooob5.59-0.1-0.03\n\n\n\n\nmodemser2srholoocv5.57-0.09-0.02\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.060.050.792414202220210.530.020.521424\n\n\n\n\n5.7.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob5.37-0.11-0.26\n\n\n\n\nmodemser2srholoocv5.48-0.13-0.28\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.150.060.732714202220210.100.050.551427\n\n\n\n\n5.7.7 t_cell_activation\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob4.360.080.28\n\n\n\n\nmodemser2srholoocv4.420.070.27\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.380.060.832715202220210.530.020.551527\n\n\n\n\n5.7.8 t_cell_polarization\n\n\nmodemser2srhooob4.250.090.26\n\n\n\n\nmodemser2srholoocv4.160.110.3\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.080.030.742716202220210.290.020.551627"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html",
    "href": "eda/batch_effects_raw_data.html",
    "title": "Batch Effects",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(vsn)\n  library(lme4)\n  library(DESeq2)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))\nsource(file.path(\"..\", \"src\", \"batch_effects.R\"))"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#pbmc-fractions",
    "href": "eda/batch_effects_raw_data.html#pbmc-fractions",
    "title": "Batch Effects",
    "section": "3.1 PBMC Fractions",
    "text": "3.1 PBMC Fractions\n\nFor the baseline specimen (day 0), we see a very strong batch effect, because the 2023 dataset is very different"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#pbmc-gene-expression",
    "href": "eda/batch_effects_raw_data.html#pbmc-gene-expression",
    "title": "Batch Effects",
    "section": "3.2 PBMC Gene Expression",
    "text": "3.2 PBMC Gene Expression\n\nVery strong cohort-specific effects for baseline specimen and post-booster specimen"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#plasma-antibody-levels",
    "href": "eda/batch_effects_raw_data.html#plasma-antibody-levels",
    "title": "Batch Effects",
    "section": "3.3 Plasma Antibody Levels",
    "text": "3.3 Plasma Antibody Levels"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#plasma-cytokine-concentration-by-legendplex",
    "href": "eda/batch_effects_raw_data.html#plasma-cytokine-concentration-by-legendplex",
    "title": "Batch Effects",
    "section": "3.4 Plasma Cytokine Concentration by Legendplex",
    "text": "3.4 Plasma Cytokine Concentration by Legendplex\n\nAfter removing outlier in the legendplex data…"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#plasma-cytokine-concentration-by-olink",
    "href": "eda/batch_effects_raw_data.html#plasma-cytokine-concentration-by-olink",
    "title": "Batch Effects",
    "section": "3.5 Plasma Cytokine Concentration by Olink",
    "text": "3.5 Plasma Cytokine Concentration by Olink\n\nAt baseline: About 6.5% of the variance is explained by the dataset, probably also due to 3 outliers from the 2022 datasets. TODO: Investigate this in more detail."
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#t-cell-activation",
    "href": "eda/batch_effects_raw_data.html#t-cell-activation",
    "title": "Batch Effects",
    "section": "3.6 T Cell Activation",
    "text": "3.6 T Cell Activation\n\nSpecimen are only available for baseline, no cohort-specific effect"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#t-cell-polarization",
    "href": "eda/batch_effects_raw_data.html#t-cell-polarization",
    "title": "Batch Effects",
    "section": "3.7 T Cell Polarization",
    "text": "3.7 T Cell Polarization\n\nSpecimen are only available for baseline, most of the variance is explained by interaction terms age_at_boost:dataset and infancy_vac:dataset. TODO: Think about what to make of this."
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#day_0",
    "href": "eda/batch_effects_raw_data.html#day_0",
    "title": "Batch Effects",
    "section": "4.1 day_0",
    "text": "4.1 day_0\n\n4.1.1 pbmc_cell_frequency\n\n\n\n4.1.2 pbmc_gene_expression\nconverting counts to integer mode\n\n\n\n4.1.3 plasma_ab_titer\n\n\n\n4.1.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.1.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0039\n\n\n4.1.6 t_cell_activation\nNon-zero fraction of NAs: 0.059\n\n\n4.1.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0106"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#day_1",
    "href": "eda/batch_effects_raw_data.html#day_1",
    "title": "Batch Effects",
    "section": "4.2 day_1",
    "text": "4.2 day_1\n\n4.2.1 pbmc_cell_frequency\n\n\n\n4.2.2 pbmc_gene_expression\nconverting counts to integer mode\n\n\n\n4.2.3 plasma_ab_titer\n\n\n\n4.2.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.2.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.014\n\n\n4.2.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.2.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#day_3",
    "href": "eda/batch_effects_raw_data.html#day_3",
    "title": "Batch Effects",
    "section": "4.3 day_3",
    "text": "4.3 day_3\n\n4.3.1 pbmc_cell_frequency\n\n\n\n4.3.2 pbmc_gene_expression\nconverting counts to integer mode\n\n\n\n4.3.3 plasma_ab_titer\n\n\n\n4.3.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.3.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0199\n\n\n4.3.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.3.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#day_14",
    "href": "eda/batch_effects_raw_data.html#day_14",
    "title": "Batch Effects",
    "section": "4.4 day_14",
    "text": "4.4 day_14\n\n4.4.1 pbmc_cell_frequency\n\n\n\n4.4.2 pbmc_gene_expression\nconverting counts to integer mode\n\n\n\n4.4.3 plasma_ab_titer\n\n\n\n4.4.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.4.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0025\n\n\n4.4.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.4.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_raw_data.html#day_30",
    "href": "eda/batch_effects_raw_data.html#day_30",
    "title": "Batch Effects",
    "section": "4.5 day_30",
    "text": "4.5 day_30\n\n4.5.1 pbmc_cell_frequency\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.2 pbmc_gene_expression\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.3 plasma_ab_titer\n\n\n\n4.5.4 plasma_cytokine_concentration_by_legendplex\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.5 plasma_cytokine_concentration_by_olink\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.6 t_cell_activation\n\n\n\n4.5.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0435"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html",
    "href": "eda/batch_effects_after_integration.html",
    "title": "Batch Effects After Integrations",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(vsn)\n  library(lme4)\n  library(DESeq2)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))\nsource(file.path(\"..\", \"src\", \"batch_effects.R\"))\nsource(file.path(\"..\", \"src\", \"normalize_integrate.R\"))\n\n\nLoading required package: mgcv\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:IRanges':\n\n    collapse\n\n\nThe following object is masked from 'package:lme4':\n\n    lmList\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\n\nThis is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'.\n\n\nLoading required package: genefilter\n\n\n\nAttaching package: 'genefilter'\n\n\nThe following objects are masked from 'package:MatrixGenerics':\n\n    rowSds, rowVars\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    rowSds, rowVars\n\n\nThe following object is masked from 'package:readr':\n\n    spec\n\n\nLoading required package: BiocParallel"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#pbmc-fractions",
    "href": "eda/batch_effects_after_integration.html#pbmc-fractions",
    "title": "Batch Effects After Integrations",
    "section": "3.1 PBMC Fractions",
    "text": "3.1 PBMC Fractions"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#pbmc-gene-expression",
    "href": "eda/batch_effects_after_integration.html#pbmc-gene-expression",
    "title": "Batch Effects After Integrations",
    "section": "3.2 PBMC Gene Expression",
    "text": "3.2 PBMC Gene Expression\n\nEven after running ComBat-seq there is still a substantial batch effect.\nHowever, here https://rpubs.com/pshinde/Alldata_batcheffect_correction_3rd_challenge, there is not batch effect, I am not sure why that is.\nMaybe it is because I am batch-correcting the data for each day relative to boost?"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#plasma-antibody-levels",
    "href": "eda/batch_effects_after_integration.html#plasma-antibody-levels",
    "title": "Batch Effects After Integrations",
    "section": "3.3 Plasma Antibody Levels",
    "text": "3.3 Plasma Antibody Levels"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#plasma-cytokine-concentration-by-legendplex",
    "href": "eda/batch_effects_after_integration.html#plasma-cytokine-concentration-by-legendplex",
    "title": "Batch Effects After Integrations",
    "section": "3.4 Plasma Cytokine Concentration by Legendplex",
    "text": "3.4 Plasma Cytokine Concentration by Legendplex"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#plasma-cytokine-concentration-by-olink",
    "href": "eda/batch_effects_after_integration.html#plasma-cytokine-concentration-by-olink",
    "title": "Batch Effects After Integrations",
    "section": "3.5 Plasma Cytokine Concentration by Olink",
    "text": "3.5 Plasma Cytokine Concentration by Olink\n\nNo further processing needed I guess."
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#t-cell-activation",
    "href": "eda/batch_effects_after_integration.html#t-cell-activation",
    "title": "Batch Effects After Integrations",
    "section": "3.6 T Cell Activation",
    "text": "3.6 T Cell Activation\n\nNo further processing needed I guess."
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#t-cell-polarization",
    "href": "eda/batch_effects_after_integration.html#t-cell-polarization",
    "title": "Batch Effects After Integrations",
    "section": "3.7 T Cell Polarization",
    "text": "3.7 T Cell Polarization\n\nSpecimen are only available for baseline, most of the variance is explained by interaction terms age_at_boost:dataset and infancy_vac:dataset. TODO: Think about what to make of this."
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#day_0",
    "href": "eda/batch_effects_after_integration.html#day_0",
    "title": "Batch Effects After Integrations",
    "section": "4.1 day_0",
    "text": "4.1 day_0\n\n4.1.1 pbmc_cell_frequency\n\n\n\n4.1.2 pbmc_gene_expression\n\n\n\n4.1.3 plasma_ab_titer\n\n\n\n4.1.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.1.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0039\n\n\n4.1.6 t_cell_activation\nNon-zero fraction of NAs: 0.059\n\n\n4.1.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0106"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#day_1",
    "href": "eda/batch_effects_after_integration.html#day_1",
    "title": "Batch Effects After Integrations",
    "section": "4.2 day_1",
    "text": "4.2 day_1\n\n4.2.1 pbmc_cell_frequency\n\n\n\n4.2.2 pbmc_gene_expression\n\n\n\n4.2.3 plasma_ab_titer\n\n\n\n4.2.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.2.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.014\n\n\n4.2.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.2.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#day_3",
    "href": "eda/batch_effects_after_integration.html#day_3",
    "title": "Batch Effects After Integrations",
    "section": "4.3 day_3",
    "text": "4.3 day_3\n\n4.3.1 pbmc_cell_frequency\n\n\n\n4.3.2 pbmc_gene_expression\n\n\n\n4.3.3 plasma_ab_titer\n\n\n\n4.3.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.3.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0199\n\n\n4.3.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.3.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#day_14",
    "href": "eda/batch_effects_after_integration.html#day_14",
    "title": "Batch Effects After Integrations",
    "section": "4.4 day_14",
    "text": "4.4 day_14\n\n4.4.1 pbmc_cell_frequency\n\n\n\n4.4.2 pbmc_gene_expression\n\n\n\n4.4.3 plasma_ab_titer\n\n\n\n4.4.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.4.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0025\n\n\n4.4.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.4.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_integration.html#day_30",
    "href": "eda/batch_effects_after_integration.html#day_30",
    "title": "Batch Effects After Integrations",
    "section": "4.5 day_30",
    "text": "4.5 day_30\n\n4.5.1 pbmc_cell_frequency\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.2 pbmc_gene_expression\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.3 plasma_ab_titer\n\n\n\n4.5.4 plasma_cytokine_concentration_by_legendplex\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.5 plasma_cytokine_concentration_by_olink\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.6 t_cell_activation\n\n\n\n4.5.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0435"
  },
  {
    "objectID": "eda/test.html",
    "href": "eda/test.html",
    "title": "",
    "section": "",
    "text": "CodeShow All CodeHide All CodeView Source\n\n\n\n\nDifference between harmonized and raw data for PBMC cell frequency data\n\n\nCode\n# source(\"../src/read_data.R\")\n# \n# input_dir &lt;- \"../data\"\n# \n# meta_df &lt;- read_harmonized_meta_data(input_dir)\n# \n# raw_data &lt;- read_raw_experimental_data(input_dir)\n# harm_data &lt;- read_harmonized_experimental_data(input_dir)\n# \n# celltype_meta &lt;- read_celltype_meta(input_dir)\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::select(dataset, cell_type_name) %&gt;%\n#   dplyr::distinct() %&gt;%\n#   dplyr::left_join(celltype_meta, by=c(\"cell_type_name\", \"dataset\")) %&gt;%\n#   View()\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::filter(cell_type_name == \"CD45+\")\n# \n# raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n#   tidyr::drop_na() %&gt;%\n#   dplyr::filter(dataset == \"2023_dataset\") %&gt;%\n#   dplyr::arrange(desc(percent_live_cell)) %&gt;%\n#   dplyr::left_join(celltype_meta, by=c(\"cell_type_name\", \"dataset\")) %&gt;%\n#   View()\n# \n# df_1 &lt;- raw_data$pbmc_cell_frequency %&gt;%\n#   dplyr::select(cell_type_name) %&gt;%\n#   dplyr::distinct() %&gt;%\n#   dplyr::mutate(\n#     in_harm_data = cell_type_name %in% harm_data$pbmc_cell_frequency$cell_type_name\n#     ) %&gt;%\n#   dplyr::arrange(in_harm_data)\n# \n# View(df_1)\n# \n# View(celltype_meta)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Overview",
    "section": "",
    "text": "1 Exploratory Data Analysis\n\nRaw Data Overview\nFiltered Data Overview\nBatch Effects Raw Data\nBatch Effects After Normalization\nBatch Effects After Batch Correction / Integration\nPrediction Targets\nMOFA Test\n\n\n\n2 Models\n\nMetadata Models\nSingle Omic Models after Normalization\nSingle Omic Models after Integration\nLiterature Models\nValidation"
  },
  {
    "objectID": "eda/harmonize_data.html",
    "href": "eda/harmonize_data.html",
    "title": "Harmonize Data",
    "section": "",
    "text": "1 Packages\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\n\n\n\n\n2 Data\n\n\nCode\ninput_dir = file.path(\"..\", \"data\")\n\n\n\n\nCode\nmeta_df &lt;- read_harmonized_meta_data(input_dir)\ngene_meta &lt;- read_gene_meta(input_dir)\n\ndata_list &lt;- read_raw_experimental_data(input_dir)\ndata_list &lt;- filter_experimental_data(meta_data=meta_df, \n                                      experimental_data=data_list,\n                                      gene_meta=gene_meta)\n\n\npbmc_cell_frequency | Removed 550 specimens because missing in meta data\n\n\nplasma_ab_titer | Removed 6931 specimens because missing in meta data\n\n\nplasma_cytokine_concentration_by_olink | Removed 495 specimens because missing in meta data\n\n\npbmc_cell_frequency | Removed 56 features because not in feature subset\n\n\nplasma_ab_titer | Removed 48 features because not in feature subset\n\n\nplasma_cytokine_concentration_by_olink | Removed 234 features because not in feature subset\n\n\nt_cell_polarization | Removed 3 features because not in feature subset\n\n\nplasma_cytokine_concentration_by_olink | Removed 300 features because qc warning\n\n\nplasma_ab_titer | Removed 10540 measurements because wrong unit used\n\n\nplasma_cytokine_concentration_by_olink | Removed 2400 measurements because wrong unit used\n\n\nplasma_cytokine_concentration_by_legendplex | Removed 8 because specimen is outlier\n\n\n\n\nCode\n((data_list$pbmc_cell_frequency %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(cell_type_name, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::arrange(cell_type_name) %&gt;%\n  dplyr::group_by(cell_type_name) %&gt;%\n  dplyr::summarize(n = n(), .groups=\"drop\") %&gt;%\n  dplyr::filter(cell_type_name %in% experimental_data_settings$pbmc_cell_frequency$feature_subset) %&gt;%\n  dplyr::pull(n)) == 4) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$pbmc_gene_expression %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(versioned_ensembl_gene_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(versioned_ensembl_gene_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) == 4) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$plasma_ab_titer %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(isotype_antigen, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  #dplyr::arrange(n, isotype_antigen, dataset) %&gt;%\n  dplyr::filter(isotype_antigen %in% experimental_data_settings$plasma_antibody_levels$feature_subset) %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n  \n((data_list$plasma_cytokine_concentration_by_legendplex %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) == 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  #dplyr::arrange(n, protein_id, dataset) %&gt;%\n  dplyr::filter(protein_id %in% experimental_data_settings$plasma_cytokine_concentration_by_olink$feature_subset) %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_activation %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_polarization %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n((data_list$t_cell_polarization %&gt;%\n  dplyr::left_join(meta_df, by=\"specimen_id\") %&gt;%\n  dplyr::select(stimulation_protein_id, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::group_by(stimulation_protein_id) %&gt;%\n  dplyr::mutate(n = n()) %&gt;%\n  dplyr::ungroup() %&gt;%\n  dplyr::pull(n)) &gt;= 3) %&gt;%\n  all() %&gt;%\n  stopifnot()"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html",
    "href": "eda/batch_effects_after_normalization.html",
    "title": "Batch Effects After Normalization",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(vsn)\n  library(lme4)\n  library(DESeq2)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick) # formatting\n})\nknitr::knit_hooks$set(crop = knitr::hook_pdfcrop) # formatting\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))\nsource(file.path(\"..\", \"src\", \"batch_effects.R\"))\nsource(file.path(\"..\", \"src\", \"normalize_integrate.R\"))\n\n\nLoading required package: mgcv\n\n\nLoading required package: nlme\n\n\n\nAttaching package: 'nlme'\n\n\nThe following object is masked from 'package:IRanges':\n\n    collapse\n\n\nThe following object is masked from 'package:lme4':\n\n    lmList\n\n\nThe following object is masked from 'package:dplyr':\n\n    collapse\n\n\nThis is mgcv 1.9-1. For overview type 'help(\"mgcv-package\")'.\n\n\nLoading required package: genefilter\n\n\n\nAttaching package: 'genefilter'\n\n\nThe following objects are masked from 'package:MatrixGenerics':\n\n    rowSds, rowVars\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    rowSds, rowVars\n\n\nThe following object is masked from 'package:readr':\n\n    spec\n\n\nLoading required package: BiocParallel"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#pbmc-fractions",
    "href": "eda/batch_effects_after_normalization.html#pbmc-fractions",
    "title": "Batch Effects After Normalization",
    "section": "3.1 PBMC Fractions",
    "text": "3.1 PBMC Fractions\n\nNo further processing needed I guess."
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#pbmc-gene-expression",
    "href": "eda/batch_effects_after_normalization.html#pbmc-gene-expression",
    "title": "Batch Effects After Normalization",
    "section": "3.2 PBMC Gene Expression",
    "text": "3.2 PBMC Gene Expression\n\nVery strong cohort-specific effects for baseline specimen and post-booster specimen"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#plasma-antibody-levels",
    "href": "eda/batch_effects_after_normalization.html#plasma-antibody-levels",
    "title": "Batch Effects After Normalization",
    "section": "3.3 Plasma Antibody Levels",
    "text": "3.3 Plasma Antibody Levels\n\nSlight batch effect. Not sure whether it needs some kind of batch correction or not."
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#plasma-cytokine-concentration-by-legendplex",
    "href": "eda/batch_effects_after_normalization.html#plasma-cytokine-concentration-by-legendplex",
    "title": "Batch Effects After Normalization",
    "section": "3.4 Plasma Cytokine Concentration by Legendplex",
    "text": "3.4 Plasma Cytokine Concentration by Legendplex\n\nSlight batch effect. Not sure whether it needs some kind of batch correction or not. The data distribution looks odd anyway!"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#plasma-cytokine-concentration-by-olink",
    "href": "eda/batch_effects_after_normalization.html#plasma-cytokine-concentration-by-olink",
    "title": "Batch Effects After Normalization",
    "section": "3.5 Plasma Cytokine Concentration by Olink",
    "text": "3.5 Plasma Cytokine Concentration by Olink\n\nNo further processing needed I guess."
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#t-cell-activation",
    "href": "eda/batch_effects_after_normalization.html#t-cell-activation",
    "title": "Batch Effects After Normalization",
    "section": "3.6 T Cell Activation",
    "text": "3.6 T Cell Activation\n\nNo further processing needed I guess."
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#t-cell-polarization",
    "href": "eda/batch_effects_after_normalization.html#t-cell-polarization",
    "title": "Batch Effects After Normalization",
    "section": "3.7 T Cell Polarization",
    "text": "3.7 T Cell Polarization\n\nSpecimen are only available for baseline, most of the variance is explained by interaction terms age_at_boost:dataset and infancy_vac:dataset. TODO: Think about what to make of this."
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#day_0",
    "href": "eda/batch_effects_after_normalization.html#day_0",
    "title": "Batch Effects After Normalization",
    "section": "4.1 day_0",
    "text": "4.1 day_0\n\n4.1.1 pbmc_cell_frequency\n\n\n\n4.1.2 pbmc_gene_expression\n\n\n\n4.1.3 plasma_ab_titer\n\n\n\n4.1.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.1.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0039\n\n\n4.1.6 t_cell_activation\nNon-zero fraction of NAs: 0.059\n\n\n4.1.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0106"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#day_1",
    "href": "eda/batch_effects_after_normalization.html#day_1",
    "title": "Batch Effects After Normalization",
    "section": "4.2 day_1",
    "text": "4.2 day_1\n\n4.2.1 pbmc_cell_frequency\n\n\n\n4.2.2 pbmc_gene_expression\n\n\n\n4.2.3 plasma_ab_titer\n\n\n\n4.2.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.2.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.014\n\n\n4.2.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.2.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#day_3",
    "href": "eda/batch_effects_after_normalization.html#day_3",
    "title": "Batch Effects After Normalization",
    "section": "4.3 day_3",
    "text": "4.3 day_3\n\n4.3.1 pbmc_cell_frequency\n\n\n\n4.3.2 pbmc_gene_expression\n\n\n\n4.3.3 plasma_ab_titer\n\n\n\n4.3.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.3.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0199\n\n\n4.3.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.3.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#day_14",
    "href": "eda/batch_effects_after_normalization.html#day_14",
    "title": "Batch Effects After Normalization",
    "section": "4.4 day_14",
    "text": "4.4 day_14\n\n4.4.1 pbmc_cell_frequency\n\n\n\n4.4.2 pbmc_gene_expression\n\n\n\n4.4.3 plasma_ab_titer\n\n\n\n4.4.4 plasma_cytokine_concentration_by_legendplex\n\n\n\n4.4.5 plasma_cytokine_concentration_by_olink\nNon-zero fraction of NAs: 0.0025\n\n\n4.4.6 t_cell_activation\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.4.7 t_cell_polarization\nFewer than 3 specimen for this combination of assay and day available"
  },
  {
    "objectID": "eda/batch_effects_after_normalization.html#day_30",
    "href": "eda/batch_effects_after_normalization.html#day_30",
    "title": "Batch Effects After Normalization",
    "section": "4.5 day_30",
    "text": "4.5 day_30\n\n4.5.1 pbmc_cell_frequency\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.2 pbmc_gene_expression\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.3 plasma_ab_titer\n\n\n\n4.5.4 plasma_cytokine_concentration_by_legendplex\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.5 plasma_cytokine_concentration_by_olink\nFewer than 3 specimen for this combination of assay and day available\n\n\n4.5.6 t_cell_activation\n\n\n\n4.5.7 t_cell_polarization\nNon-zero fraction of NAs: 0.0435"
  },
  {
    "objectID": "models/metadata_model.html",
    "href": "models/metadata_model.html",
    "title": "Metadata Models",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nknitr::opts_knit$set(output.dir = \"./\")\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))"
  },
  {
    "objectID": "models/metadata_model.html#task-1.1",
    "href": "models/metadata_model.html#task-1.1",
    "title": "Metadata Models",
    "section": "5.1 Task 1.1",
    "text": "5.1 Task 1.1\nRank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\n\n\nmodemser2srhooob20,918,7570.820.79\n\n\n\n\nmodemser2srholoocv20,556,4720.830.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.320.020.44332020222021-0.330.050.642033"
  },
  {
    "objectID": "models/metadata_model.html#task-1.2",
    "href": "models/metadata_model.html#task-1.2",
    "title": "Metadata Models",
    "section": "5.2 Task 1.2",
    "text": "5.2 Task 1.2\nRank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\n\n\nmodemser2srhooob0.370.630.83\n\n\n\n\nmodemser2srholoocv0.380.630.81\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.390.03-0.893320202220210.120.02-0.732033"
  },
  {
    "objectID": "models/metadata_model.html#task-2.1",
    "href": "models/metadata_model.html#task-2.1",
    "title": "Metadata Models",
    "section": "5.3 Task 2.1",
    "text": "5.3 Task 2.1\nRank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\n\n\nmodemser2srhooob64.450.340.59\n\n\n\n\nmodemser2srholoocv63.730.340.59\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.530.040.881233202020220.130.060.551221202120200.720.040.813312202120220.490.020.553321202220200.200.040.812112202220210.600.010.882133"
  },
  {
    "objectID": "models/metadata_model.html#task-2.2",
    "href": "models/metadata_model.html#task-2.2",
    "title": "Metadata Models",
    "section": "5.4 Task 2.2",
    "text": "5.4 Task 2.2\nRank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\n\n\nmodemser2srhooob0.11-0.04-0.04\n\n\n\n\nmodemser2srholoocv0.11-0.030\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.110.03-0.22123320202022-0.310.02-0.211221202120200.520.03-0.43331220212022-0.310.04-0.21332120222020-0.440.04-0.432112202220210.000.03-0.222133"
  },
  {
    "objectID": "models/metadata_model.html#task-3.1",
    "href": "models/metadata_model.html#task-3.1",
    "title": "Metadata Models",
    "section": "5.5 Task 3.1",
    "text": "5.5 Task 3.1\nRank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\n\n\nmodemser2srhooob10.180.46\n\n\n\n\nmodemser2srholoocv10.180.46\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.350.020.57263620202022-0.060.040.532621202120200.010.030.273626202120220.380.050.53362120222020-0.010.020.272126202220210.400.020.572136"
  },
  {
    "objectID": "models/metadata_model.html#task-3.2",
    "href": "models/metadata_model.html#task-3.2",
    "title": "Metadata Models",
    "section": "5.6 Task 3.2",
    "text": "5.6 Task 3.2\nRank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\n\n\nmodemser2srhooob1.140.010.1\n\n\n\n\nmodemser2srholoocv1.1500.08\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.210.01-0.43263620202022-0.260.03-0.19262120212020-0.160.02-0.33362620212022-0.080.05-0.19362120222020-0.350.02-0.332126202220210.160.05-0.432136"
  },
  {
    "objectID": "models/metadata_model.html#task-4.1",
    "href": "models/metadata_model.html#task-4.1",
    "title": "Metadata Models",
    "section": "5.7 Task 4.1",
    "text": "5.7 Task 4.1\nRank the individuals based on their Th1/Th2 (IFN-&lt;U+03B3&gt;/IL-5) polarization ratio on Day 30 post-booster vaccination.\n\n\nmodemser2srhooob4.520.030.21\n\n\n\n\nmodemser2srholoocv4.530.030.18\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.470.050.742716202220210.530.020.551627"
  },
  {
    "objectID": "models/single_omic_after_normalization.html",
    "href": "models/single_omic_after_normalization.html",
    "title": "Single-Omic Models After Normalization",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-1.1",
    "href": "models/single_omic_after_normalization.html#task-1.1",
    "title": "Single-Omic Models After Normalization",
    "section": "5.1 Task 1.1",
    "text": "5.1 Task 1.1\nRank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\n\n5.1.1 metadata model\n\n\nmodemser2srhooob20,918,7570.820.79\n\n\n\n\nmodemser2srholoocv20,556,4720.830.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.320.020.44332020222021-0.330.050.642033\n\n\n\n\n5.1.2 pbmc_cell_frequency\nRemoving 3 targets because training data is missing\n\n\nmodemser2srhooob27,473,5480.770.65\n\n\n\n\nmodemser2srholoocv28,733,2960.760.72\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.140.070.44302020222021-0.300.040.632030\n\n\n\n\n5.1.3 pbmc_gene_expression\n\n\nmodemser2srhooob11,265,4180.90.71\n\n\n\n\nmodemser2srholoocv10,997,4980.910.71\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.060.160.44332020222021-0.060.100.642033\n\n\n\n\n5.1.4 plasma_ab_titer\n\n\nmodemser2srhooob28,988,9230.750.67\n\n\n\n\nmodemser2srholoocv29,877,6450.750.64\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.130.060.44332020222021-0.030.050.642033\n\n\n\n\n5.1.5 plasma_cytokine_concentration_by_legendplex\nRemoving 4 targets because training data is missing\n\n\nmodemser2srhooob35,262,4820.70.75\n\n\n\n\nmodemser2srholoocv34,548,0480.70.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.030.060.48311820222021-0.070.020.611831\n\n\n\n\n5.1.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob51,577,1610.560.72\n\n\n\n\nmodemser2srholoocv49,430,3770.580.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.360.040.52331820222021-0.210.040.641833\n\n\n\n\n5.1.7 t_cell_activation\n\n\nmodemser2srhooob18,494,0280.840.7\n\n\n\n\nmodemser2srholoocv18,533,9600.840.7\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.220.040.44332020222021-0.140.030.642033\n\n\n\n\n5.1.8 t_cell_polarization\nRemoving 12 targets because training data is missing\n\n\nmodemser2srhooob25,089,6180.770.66\n\n\n\n\nmodemser2srholoocv24,179,1560.770.65\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.520.070.34261520222021-0.180.030.661526"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-1.2",
    "href": "models/single_omic_after_normalization.html#task-1.2",
    "title": "Single-Omic Models After Normalization",
    "section": "5.2 Task 1.2",
    "text": "5.2 Task 1.2\nRank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\n\n5.2.1 metadata model\n\n\nmodemser2srhooob0.370.630.83\n\n\n\n\nmodemser2srholoocv0.380.630.81\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.390.03-0.893320202220210.120.02-0.732033\n\n\n\n\n5.2.2 pbmc_cell_frequency\nRemoving 3 targets because training data is missing\n\n\nmodemser2srhooob0.510.50.74\n\n\n\n\nmodemser2srholoocv0.550.470.73\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.010.08-0.893020202220210.080.03-0.772030\n\n\n\n\n5.2.3 pbmc_gene_expression\n\n\nmodemser2srhooob0.730.290.49\n\n\n\n\nmodemser2srholoocv0.750.270.45\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.190.17-0.893320202220210.170.07-0.732033\n\n\n\n\n5.2.4 plasma_ab_titer\n\n\nmodemser2srhooob0.470.540.78\n\n\n\n\nmodemser2srholoocv0.460.550.8\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.320.04-0.893320202220210.350.04-0.732033\n\n\n\n\n5.2.5 plasma_cytokine_concentration_by_legendplex\nRemoving 4 targets because training data is missing\n\n\nmodemser2srhooob0.580.370.68\n\n\n\n\nmodemser2srholoocv0.560.40.72\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.320.06-0.89311820222021-0.240.03-0.691831\n\n\n\n\n5.2.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob0.690.310.7\n\n\n\n\nmodemser2srholoocv0.660.340.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.220.04-0.933318202220210.170.05-0.731833\n\n\n\n\n5.2.7 t_cell_activation\n\n\nmodemser2srhooob0.460.550.75\n\n\n\n\nmodemser2srholoocv0.480.530.75\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.040.03-0.89332020222021-0.020.05-0.732033\n\n\n\n\n5.2.8 t_cell_polarization\nRemoving 12 targets because training data is missing\n\n\nmodemser2srhooob0.560.460.7\n\n\n\n\nmodemser2srholoocv0.530.490.74\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.160.06-0.912615202220210.260.04-0.721526"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-2.1",
    "href": "models/single_omic_after_normalization.html#task-2.1",
    "title": "Single-Omic Models After Normalization",
    "section": "5.3 Task 2.1",
    "text": "5.3 Task 2.1\nRank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\n\n5.3.1 metadata model\n\n\nmodemser2srhooob64.450.340.59\n\n\n\n\nmodemser2srholoocv63.730.340.59\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.530.040.881233202020220.130.060.551221202120200.720.040.813312202120220.490.020.553321202220200.200.040.812112202220210.600.010.882133\n\n\n\n\n5.3.2 pbmc_cell_frequency\n\n\nmodemser2srhooob50.790.480.7\n\n\n\n\nmodemser2srholoocv50.610.480.7\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.810.020.881233202020220.540.020.551221202120200.720.020.813312202120220.580.020.553321202220200.610.040.812112202220210.820.010.882133\n\n\n\n\n5.3.3 pbmc_gene_expression\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob77.280.210.43\n\n\n\n\nmodemser2srholoocv81.530.170.4\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.280.050.881133202020220.170.080.551121202120200.650.130.843311202120220.640.060.553321202220200.680.100.842111202220210.570.060.882133\n\n\n\n\n5.3.4 plasma_ab_titer\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob75.540.220.43\n\n\n\n\nmodemser2srholoocv75.940.220.47\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.240.050.553021202220210.320.060.882130\n\n\n\n\n5.3.5 plasma_cytokine_concentration_by_legendplex\nRemoving 20 targets because training data is missing\n\n\nmodemser2srhooob78.650.190.44\n\n\n\n\nmodemser2srholoocv78.960.190.49\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.120.050.532818202220210.300.050.871828\n\n\n\n\n5.3.6 plasma_cytokine_concentration_by_olink\nRemoving 14 targets because training data is missing\n\n\nmodemser2srhooob66.350.30.49\n\n\n\n\nmodemser2srholoocv65.970.30.51\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.130.050.55331920222021-0.100.060.881933\n\n\n\n\n5.3.7 t_cell_activation\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob58.860.380.6\n\n\n\n\nmodemser2srholoocv57.110.40.6\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.470.020.603120202220210.750.010.872031\n\n\n\n\n5.3.8 t_cell_polarization\nRemoving 25 targets because training data is missing\n\n\nmodemser2srhooob68.760.310.6\n\n\n\n\nmodemser2srholoocv69.470.310.58\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.330.030.542516202220210.720.030.861625"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-2.2",
    "href": "models/single_omic_after_normalization.html#task-2.2",
    "title": "Single-Omic Models After Normalization",
    "section": "5.4 Task 2.2",
    "text": "5.4 Task 2.2\nRank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\n\n5.4.1 metadata model\n\n\nmodemser2srhooob0.11-0.04-0.04\n\n\n\n\nmodemser2srholoocv0.11-0.030\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.110.03-0.22123320202022-0.310.02-0.211221202120200.520.03-0.43331220212022-0.310.04-0.21332120222020-0.440.04-0.432112202220210.000.03-0.222133\n\n\n\n\n5.4.2 pbmc_cell_frequency\n\n\nmodemser2srhooob0.11-0.010.1\n\n\n\n\nmodemser2srholoocv0.11-0.010.12\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.390.03-0.221233202020220.130.04-0.211221202120200.160.06-0.433312202120220.150.04-0.213321202220200.180.04-0.432112202220210.090.02-0.222133\n\n\n\n\n5.4.3 pbmc_gene_expression\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob0.080.250.53\n\n\n\n\nmodemser2srholoocv0.080.270.52\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.020.08-0.22113320202022-0.450.07-0.211121202120200.160.15-0.313311202120220.050.16-0.21332120222020-0.520.12-0.312111202220210.070.09-0.222133\n\n\n\n\n5.4.4 plasma_ab_titer\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.030.18\n\n\n\n\nmodemser2srholoocv0.08-0.020.19\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.210.04-0.213021202220210.090.05-0.232130\n\n\n\n\n5.4.5 plasma_cytokine_concentration_by_legendplex\nRemoving 20 targets because training data is missing\n\n\nmodemser2srhooob0.070.050.26\n\n\n\n\nmodemser2srholoocv0.070.050.26\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.100.05-0.272818202220210.190.03-0.251828\n\n\n\n\n5.4.6 plasma_cytokine_concentration_by_olink\nRemoving 14 targets because training data is missing\n\n\nmodemser2srhooob0.070.090.1\n\n\n\n\nmodemser2srholoocv0.070.080.02\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.170.06-0.28331920222021-0.120.03-0.221933\n\n\n\n\n5.4.7 t_cell_activation\nRemoving 15 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.090.11\n\n\n\n\nmodemser2srholoocv0.08-0.10.09\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.20.02-0.163120202220210.00.04-0.232031\n\n\n\n\n5.4.8 t_cell_polarization\nRemoving 25 targets because training data is missing\n\n\nmodemser2srhooob0.08-0.120.06\n\n\n\n\nmodemser2srholoocv0.08-0.120.07\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.000.07-0.292516202220210.130.03-0.241625"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-3.1",
    "href": "models/single_omic_after_normalization.html#task-3.1",
    "title": "Single-Omic Models After Normalization",
    "section": "5.5 Task 3.1",
    "text": "5.5 Task 3.1\nRank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\n\n5.5.1 metadata model\n\n\nmodemser2srhooob10.180.46\n\n\n\n\nmodemser2srholoocv10.180.46\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.350.020.57263620202022-0.060.040.532621202120200.010.030.273626202120220.380.050.53362120222020-0.010.020.272126202220210.400.020.572136\n\n\n\n\n5.5.2 pbmc_cell_frequency\nRemoving 18 targets because training data is missing\n\n\nmodemser2srhooob10.150.33\n\n\n\n\nmodemser2srholoocv1.030.130.32\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.400.030.59113320202022-0.130.070.531121202120200.050.080.223311202120220.120.030.533321202220200.040.040.22211120222021-0.030.050.592133\n\n\n\n\n5.5.3 pbmc_gene_expression\n\n\nmodemser2srhooob0.970.210.48\n\n\n\n\nmodemser2srholoocv0.960.210.47\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20202021-0.030.060.57263620202022-0.050.070.532621202120200.160.140.273626202120220.550.080.533621202220200.140.160.272126202220210.390.060.572136\n\n\n\n\n5.5.4 plasma_ab_titer\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob0.940.120.35\n\n\n\n\nmodemser2srholoocv0.910.160.41\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.170.060.533321202220210.180.040.582133\n\n\n\n\n5.5.5 plasma_cytokine_concentration_by_legendplex\nRemoving 34 targets because training data is missing\n\n\nmodemser2srhooob1.070.030.18\n\n\n\n\nmodemser2srholoocv1.020.070.24\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.300.050.533118202220210.140.030.601831\n\n\n\n\n5.5.6 plasma_cytokine_concentration_by_olink\nRemoving 28 targets because training data is missing\n\n\nmodemser2srhooob1.230.060.21\n\n\n\n\nmodemser2srholoocv1.270.040.12\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.010.050.60361920222021-0.090.040.571936\n\n\n\n\n5.5.7 t_cell_activation\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob10.180.46\n\n\n\n\nmodemser2srholoocv10.180.45\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.530.020.533420202220210.180.030.612034\n\n\n\n\n5.5.8 t_cell_polarization\nRemoving 40 targets because training data is missing\n\n\nmodemser2srhooob1.040.170.39\n\n\n\n\nmodemser2srholoocv1.030.170.37\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.480.030.462716202220210.160.040.721627"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-3.2",
    "href": "models/single_omic_after_normalization.html#task-3.2",
    "title": "Single-Omic Models After Normalization",
    "section": "5.6 Task 3.2",
    "text": "5.6 Task 3.2\nRank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\n\n5.6.1 metadata model\n\n\nmodemser2srhooob1.140.010.1\n\n\n\n\nmodemser2srholoocv1.1500.08\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.210.01-0.43263620202022-0.260.03-0.19262120212020-0.160.02-0.33362620212022-0.080.05-0.19362120222020-0.350.02-0.332126202220210.160.05-0.432136\n\n\n\n\n5.6.2 pbmc_cell_frequency\nRemoving 18 targets because training data is missing\n\n\nmodemser2srhooob0.9600\n\n\n\n\nmodemser2srholoocv0.97-0.01-0.05\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.260.03-0.37113320202022-0.130.04-0.19112120212020-0.180.10-0.43331120212022-0.170.04-0.19332120222020-0.270.03-0.432111202220210.040.04-0.372133\n\n\n\n\n5.6.3 pbmc_gene_expression\n\n\nmodemser2srhooob1.16-0.010.17\n\n\n\n\nmodemser2srholoocv1.10.040.24\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202020210.270.04-0.43263620202022-0.230.05-0.192621202120200.260.04-0.33362620212022-0.160.07-0.19362120222020-0.320.13-0.33212620222021-0.330.08-0.432136\n\n\n\n\n5.6.4 plasma_ab_titer\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob1.260.080.34\n\n\n\n\nmodemser2srholoocv1.260.080.37\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.420.04-0.193321202220210.460.02-0.522133\n\n\n\n\n5.6.5 plasma_cytokine_concentration_by_legendplex\nRemoving 34 targets because training data is missing\n\n\nmodemser2srhooob1.4200\n\n\n\n\nmodemser2srholoocv1.390.020.04\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.030.05-0.183118202220210.120.03-0.541831\n\n\n\n\n5.6.6 plasma_cytokine_concentration_by_olink\nRemoving 28 targets because training data is missing\n\n\nmodemser2srhooob1.280.050.21\n\n\n\n\nmodemser2srholoocv1.270.060.22\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.290.10-0.123619202220210.150.05-0.431936\n\n\n\n\n5.6.7 t_cell_activation\nRemoving 29 targets because training data is missing\n\n\nmodemser2srhooob1.30.020.29\n\n\n\n\nmodemser2srholoocv1.230.080.34\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.210.04-0.243420202220210.400.01-0.452034\n\n\n\n\n5.6.8 t_cell_polarization\nRemoving 40 targets because training data is missing\n\n\nmodemser2srhooob1.51-0.150.04\n\n\n\n\nmodemser2srholoocv1.49-0.130.04\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.240.05-0.282716202220210.090.04-0.371627"
  },
  {
    "objectID": "models/single_omic_after_normalization.html#task-4.1",
    "href": "models/single_omic_after_normalization.html#task-4.1",
    "title": "Single-Omic Models After Normalization",
    "section": "5.7 Task 4.1",
    "text": "5.7 Task 4.1\nRank the individuals based on their Th1/Th2 (IFN-&lt;U+03B3&gt;/IL-5) polarization ratio on Day 30 post-booster vaccination.\n\n5.7.1 metadata model\n\n\nmodemser2srhooob4.520.030.21\n\n\n\n\nmodemser2srholoocv4.530.030.18\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.470.050.742716202220210.530.020.551627\n\n\n\n\n5.7.2 pbmc_cell_frequency\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob4.340.080.39\n\n\n\n\nmodemser2srholoocv4.250.10.42\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.480.030.742516202220210.670.010.621625\n\n\n\n\n5.7.3 pbmc_gene_expression\n\n\nmodemser2srhooob5.11-0.090\n\n\n\n\nmodemser2srholoocv5-0.070.09\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.250.110.742716202220210.360.060.551627\n\n\n\n\n5.7.4 plasma_ab_titer\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob5.05-0.06-0.06\n\n\n\n\nmodemser2srholoocv5.1-0.07-0.13\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.400.040.742616202220210.190.030.561626\n\n\n\n\n5.7.5 plasma_cytokine_concentration_by_legendplex\nRemoving 5 targets because training data is missing\n\n\nmodemser2srhooob6.09-0.2-0.18\n\n\n\n\nmodemser2srholoocv6.05-0.19-0.13\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.080.070.792414202220210.300.030.521424\n\n\n\n\n5.7.6 plasma_cytokine_concentration_by_olink\nRemoving 2 targets because training data is missing\n\n\nmodemser2srhooob5.37-0.11-0.26\n\n\n\n\nmodemser2srholoocv5.48-0.13-0.28\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n20212022-0.150.060.732714202220210.100.050.551427\n\n\n\n\n5.7.7 t_cell_activation\nRemoving 1 targets because training data is missing\n\n\nmodemser2srhooob4.360.080.28\n\n\n\n\nmodemser2srholoocv4.420.070.27\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.380.060.832715202220210.530.020.551527\n\n\n\n\n5.7.8 t_cell_polarization\n\n\nmodemser2srhooob4.250.090.26\n\n\n\n\nmodemser2srholoocv4.160.110.3\n\n\n\n\ntrainsettestsetsrho_meansrho_sdsrho_baselinetrain_ntest_n202120220.080.030.742716202220210.290.020.551627"
  },
  {
    "objectID": "models/validation.html",
    "href": "models/validation.html",
    "title": "Validation Test",
    "section": "",
    "text": "1 Packages\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(flextable)\n  library(ggdark)\n  library(magick)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\nsource(file.path(\"..\", \"src\", \"generate_targets.R\"))\nsource(file.path(\"..\", \"src\", \"model.R\"))\n\n\n\n\n2 Data\n\n\nCode\ninput_dir = file.path(\"..\", \"data\")\n\n\n\n\nCode\ncelltype_meta &lt;- read_celltype_meta(input_dir)\ngene_meta &lt;- read_gene_meta_plus(input_dir)\nprotein_meta &lt;- read_protein_meta(input_dir)\n\nmeta_data &lt;- read_harmonized_meta_data(input_dir)\nspecimen_per_day &lt;- get_specimen_per_day(meta_data=meta_data)\n\nRECOMPUTE &lt;- FALSE\nif (RECOMPUTE) {\n  source(file.path(\"..\", \"src\", \"normalize_integrate.R\"))\n  \n  raw_experimental_data &lt;- read_raw_experimental_data(input_dir)\n  \n  filtered_experimental_data &lt;- filter_experimental_data(\n    meta_data=meta_data, \n    experimental_data=raw_experimental_data,\n    gene_meta=gene_meta)\n  \n  write_rds(filtered_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"filtered_experimental_data.RDS\"))\n  \n  normalized_experimental_data &lt;- normalize_experimental_data(\n    meta_data=meta_data, \n    raw_experimental_data=filtered_experimental_data,\n    gene_meta=gene_meta)\n  \n  write_rds(normalized_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"normalized_experimental_data.RDS\"))\n  \n  integrated_experimental_data &lt;- integrate_experimental_data(\n    meta_data=meta_data, \n    normalized_experimental_data=normalized_experimental_data)\n  \n  write_rds(integrated_experimental_data, \n            file = file.path(input_dir, \"prc_datasets\", \n                             \"integrated_experimental_data.RDS\"))\n\n  # use raw/filtered experimental data for computation of targets\n  target_list &lt;- generate_all_targets(\n    meta_data=meta_data, \n    experimental_data=filtered_experimental_data, \n    experimental_data_settings=experimental_data_settings, \n    gene_meta=gene_meta,\n    protein_meta=protein_meta\n    )\n  \n  write_rds(target_list, \n          file = file.path(input_dir, \"prc_datasets\", \n                           \"target_list.RDS\"))\n  \n  rm(raw_experimental_data, filtered_experimental_data)\n  experimental_data &lt;- integrated_experimental_data\n} else {\n  experimental_data &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                                            \"integrated_experimental_data.RDS\"))\n  experimental_data &lt;- experimental_data[-which(names(experimental_data) ==\n                                                \"pbmc_gene_expression_counts\")]\n  target_list &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                           \"target_list.RDS\"))\n}\n\n\n\n\n3 Conclusions\n\nFor tasks 1.1, 2.1, 3.1, 4.1 the prediction based on baseline is pretty good\nFor task 1.2, (-1) times the baseline seems to be a super good predictors\nIn tasks 1.2, 2.2, 3.2 my models looks pretty shitty\n\n\n\n4 Construct Feature Matrix\n\n\nCode\ndf_boruta &lt;- read_rds(file = file.path(input_dir, \"prc_datasets\", \n                                       \"df_boruta.RDS\")) %&gt;%\n  dplyr::mutate(modality_feature = paste0(modality, \"_\", feature))\n\nboruta_features &lt;- unique(df_boruta$modality_feature)\n\nexperimental_predictors &lt;- generate_wide_experimental_data(experimental_data=experimental_data,\n                                                           impute=\"median\", \n                                                           verbose=TRUE) %&gt;%\n  purrr::imap(function(df, modality) {\n    colnames(df) &lt;- paste0(modality, \"_\", colnames(df))\n    df\n  })\n\nall_specimens &lt;- purrr::map(experimental_predictors, ~ rownames(.x)) %&gt;% \n  purrr::reduce(.x=., .f=dplyr::union)\n\nall_features &lt;- purrr::map(experimental_predictors, ~ colnames(.x)) %&gt;% \n  purrr::reduce(.x=., .f=dplyr::union)\n\nfeature_mtx &lt;- matrix(data=NA, nrow=length(all_specimens), ncol=length(all_features))\nrownames(feature_mtx) &lt;- all_specimens; colnames(feature_mtx) &lt;- all_features\n\nfor (modality_data in experimental_predictors) {\n  feature_mtx[rownames(modality_data), colnames(modality_data)] &lt;-\n    modality_data\n}\n\nstopifnot(all(boruta_features %in% colnames(feature_mtx)))\nspecimen_day_0 &lt;- as.character(specimen_per_day$day_0$specimen_id)[\n  as.character(specimen_per_day$day_0$specimen_id) %in% rownames(feature_mtx)]\nfeature_mtx &lt;- feature_mtx[specimen_day_0, boruta_features]\n\nstr(feature_mtx)\n\n\n num [1:138, 1:363] NA NA 0.356 NA 1.477 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:138] \"1\" \"19\" \"27\" \"37\" ...\n  ..$ : chr [1:363] \"pbmc_cell_frequency_Monocytes\" \"pbmc_cell_frequency_Basophils\" \"pbmc_cell_frequency_Bcells\" \"pbmc_cell_frequency_CD4Tcells\" ...\n\n\nCode\nfeature_mtx &lt;- feature_mtx[rowMeans(is.na(feature_mtx)) &lt; 0.5, ]\nstr(feature_mtx)\n\n\n num [1:136, 1:363] NA NA 0.356 NA 1.477 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:136] \"1\" \"19\" \"27\" \"37\" ...\n  ..$ : chr [1:363] \"pbmc_cell_frequency_Monocytes\" \"pbmc_cell_frequency_Basophils\" \"pbmc_cell_frequency_Bcells\" \"pbmc_cell_frequency_CD4Tcells\" ...\n\n\nCode\nfeature_mtx &lt;- t(impute::impute.knn(data=t(feature_mtx))$data)\nstr(feature_mtx)\n\n\n num [1:136, 1:363] 6.48 6.459 0.356 6.422 1.477 ...\n - attr(*, \"dimnames\")=List of 2\n  ..$ : chr [1:136] \"1\" \"19\" \"27\" \"37\" ...\n  ..$ : chr [1:363] \"pbmc_cell_frequency_Monocytes\" \"pbmc_cell_frequency_Basophils\" \"pbmc_cell_frequency_Bcells\" \"pbmc_cell_frequency_CD4Tcells\" ...\n\n\nCode\nfeature_df &lt;- feature_mtx %&gt;%\n  as.data.frame() %&gt;%\n  tibble::rownames_to_column(\"specimen_id\") %&gt;%\n  dplyr::mutate(specimen_id = as.numeric(specimen_id)) %&gt;%\n  dplyr::left_join((specimen_per_day$day_0 %&gt;% \n                      dplyr::select(subject_id, specimen_id, dataset)),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::select(-c(specimen_id, dataset))\nstopifnot(!any(is.na(feature_df$subject_id)))\n\n\n\n\n5 Tasks\n\n\nCode\ntask_meta &lt;- list(\n  task_11 = list(\n    name = \"task_11\",\n    header = \"## Task 1.1\",\n    description = \"Rank the individuals by IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations.\"\n  ),\n  task_12 = list(\n    name = \"task_12\",\n    header = \"## Task 1.2\",\n    description = \"Rank the individuals by fold change of IgG antibody levels against pertussis toxin (PT) that we detect in plasma 14 days post booster vaccinations compared to titer values at day 0.\"\n  ),\n  task_21 = list(\n    name = \"task_21\",\n    header = \"## Task 2.1\",\n    description = \"Rank the individuals by predicted frequency of Monocytes on day 1 post boost after vaccination.\"\n  ),\n  task_22 = list(\n    name = \"task_22\",\n    header = \"## Task 2.2\",\n    description = \"Rank the individuals by fold change of predicted frequency of Monocytes on day 1 post booster vaccination compared to cell frequency values at day 0.\"\n  ),\n  task_31 = list(\n    name = \"task_31\",\n    header = \"## Task 3.1\",\n    description = \"Rank the individuals by predicted gene expression of CCL3 on day 3 post-booster vaccination.\"\n  ),\n  task_32 = list(\n    name = \"task_32\",\n    header = \"## Task 3.2\",\n    description = \"Rank the individuals by fold change of predicted gene expression of CCL3 on day 3 post booster vaccination compared to gene expression values at day 0.\"\n  ),\n  task_41 = list(\n    name = \"task_41\",\n    header = \"## Task 4.1\",\n    description = \"Rank the individuals based on their Th1/Th2 (IFN-g/IL-5) polarization ratio on Day 30 post-booster vaccination.\"\n  )\n)\n\n\n\n\n6 Loop\n\n\nCode\nget_cross_cohort_perf_combinations &lt;- function(model_df, meta_data, nobase=FALSE) {\n  stopifnot(all(c(\"target\", \"subject_id\", \"baseline\") %in% colnames(model_df)))\n  \n  model_dataset_df &lt;- model_df %&gt;%\n    dplyr::left_join(meta_data %&gt;% \n                       dplyr::select(subject_id, dataset) %&gt;%\n                       dplyr::distinct(),\n                     by=\"subject_id\")\n  \n  all_datasets &lt;- unique(model_dataset_df$dataset)\n  \n  cross_dataset_out &lt;- purrr::map(all_datasets, function(test_dataset) {\n    # test_dataset &lt;- all_datasets[1]\n    train_dataset &lt;- all_datasets[!all_datasets %in% test_dataset]\n    \n    train_df &lt;- model_dataset_df %&gt;%\n      dplyr::filter(dataset %in% train_dataset) %&gt;%\n      dplyr::select(-c(dataset, subject_id))\n    \n    test_df &lt;- model_dataset_df %&gt;%\n      dplyr::filter(dataset %in% test_dataset) %&gt;%\n      dplyr::select(-c(dataset, subject_id))\n    \n    if (nobase) {\n      train_df &lt;- train_df %&gt;% dplyr::select(-baseline)\n    }\n    model &lt;- ranger::ranger(formula = target ~ ., \n                            data = train_df, \n                            num.trees = 500)\n    predictions &lt;- predict(model, test_df)$predictions\n    tibble::tibble(trainset = paste0(train_dataset, collapse=\"__\"),\n                   testset = test_dataset,\n                   target = test_df$target, \n                   prediction = predictions,\n                   baseline = test_df$baseline,\n                   testset_mean = mean(test_df$target))\n  }) %&gt;%\n    dplyr::bind_rows()\n  \n  # cross_dataset_out %&gt;%\n  #   ggplot() +\n  #   geom_point(aes(x=prediction, y=target)) +\n  #   ggdark::dark_mode(verbose=FALSE)\n  \n  cross_dataset_out %&gt;%\n    dplyr::group_by(trainset, testset) %&gt;%\n    dplyr::summarise(\n      test_mse = get_mse(target, prediction),\n      test_r2 = get_r2(target, prediction),\n      test_srho = get_spearman(target, prediction),\n      baseline_srho = get_spearman(target, baseline),\n      mse_same_cohort = get_mse(target, testset_mean),\n      .groups = \"drop\"\n    )\n}\n\nget_cross_cohort_perf_combinations_repeated &lt;- function(model_df, meta_data, \n                                                        n_iter=25, nobase=FALSE) {\n  # TODO\n  df_long &lt;- purrr::map(1:n_iter, function(iter) {\n    get_cross_cohort_perf_combinations(model_df=model_df, meta_data=meta_data, \n                                       nobase=nobase) %&gt;%\n      dplyr::mutate(iteration=iter)\n  }) %&gt;%\n    dplyr::bind_rows()\n  df_out &lt;- df_long %&gt;%\n    dplyr::group_by(trainset, testset) %&gt;%\n    dplyr::summarise(test_srho_mean = mean(test_srho),\n                     test_srho_sd = sd(test_srho),\n                     baseline_srho_mean = mean(baseline_srho),\n                     .groups = \"drop\")\n  return(df_out)\n}\n\n\n\n\nCode\npermute_columns &lt;- function(mtx, seed=42) {\n  set.seed(42)\n  for (col_idx in 1:ncol(mtx)) {\n    mtx[, col_idx] &lt;- sample(mtx[, col_idx], size=nrow(mtx), replace=TRUE)\n  }\n  return(mtx)\n}\n\ntibble_list &lt;- list()\n\nmetadata_covariates &lt;- get_metadata_covariates(meta_data)\n\nmodel_list &lt;- list(\n  \"metadata\" = metadata_covariates,\n  \"features\" = feature_df,\n  \"features_permuted\" = permute_columns(feature_df),\n  \"features_permuted_nobase\" = permute_columns(feature_df),\n  \"metadata_plus_features\" = feature_df %&gt;% \n    dplyr::left_join(metadata_covariates, by=\"subject_id\")\n)\n\nfor (task in task_meta) {\n  # task &lt;- task_meta[[3]]\n  \n  for (model_name in names(model_list)) {\n    # model_name &lt;- \"features_permuted\"\n    #print(model_name)\n    \n    model_df &lt;- target_list[[task$name]] %&gt;%\n      dplyr::left_join(model_list[[model_name]], by=\"subject_id\") %&gt;%\n      tidyr::drop_na()\n    \n    if (model_name == \"features_permuted_nobase\") {\n      nobase &lt;- TRUE\n    } else {\n      nobase &lt;- FALSE\n    }\n    \n    task_df &lt;- get_cross_cohort_perf_combinations_repeated(model_df=model_df,\n                                                           meta_data=meta_data, \n                                                           nobase=nobase) %&gt;%\n      dplyr::mutate(task = task$name, model = model_name) %&gt;%\n      dplyr::mutate(across(.cols=c(test_srho_mean, test_srho_sd, baseline_srho_mean),\n                           .fns=~round(.x, 2))) \n    tibble_list &lt;- rlist::list.append(tibble_list, task_df)\n  }\n  \n}\n\ndf &lt;- dplyr::bind_rows(tibble_list) %&gt;%\n    dplyr::mutate(\n      task = factor(task, levels=paste0(rep(paste0(\"task_\", 1:4), each=2), rep(1:2, 4))),\n      model = factor(model, levels=names(model_list))\n      )\ndf\n\n\n\n  \n\n\n\n\n\nCode\ndf %&gt;%\n  dplyr::select(-test_srho_sd) %&gt;%\n  tidyr::pivot_longer(cols=c(test_srho_mean, baseline_srho_mean),\n                      names_to=\"metric\", values_to=\"value\") %&gt;%\n  ggplot() +\n  geom_vline(xintercept=c(0, 0.5), color=\"grey\", linetype=\"dashed\") +\n  geom_point(aes(y=task, x=value, color=testset, shape=metric), alpha=0.50) +\n  ggdark::dark_mode(verbose=TRUE) +\n  facet_wrap(~model)\n\n\nInverted geom defaults of fill and color/colour.\nTo change them back, use invert_geom_defaults().\n\n\nWarning: Removed 8 rows containing missing values or values outside the scale range\n(`geom_point()`)."
  },
  {
    "objectID": "eda/mofa_test.html",
    "href": "eda/mofa_test.html",
    "title": "MOFA Test",
    "section": "",
    "text": "1 Packages\n\n\nCode\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick)\n  library(reticulate)\n  reticulate::use_condaenv(\"scanpy\")\n  library(MOFA2)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))\n\n\n\n\n2 Data\n\n\nCode\ninput_dir = file.path(\"..\", \"data\")\n\n\n\n\nCode\nmeta_data &lt;- read_harmonized_meta_data(input_dir)\ngene_meta &lt;- read_gene_meta(input_dir)\n\n#exp_data &lt;- read_harmonized_experimental_data(input_dir)\nexp_data &lt;- read_raw_experimental_data(input_dir)\nexp_data &lt;- filter_experimental_data(meta_data, exp_data, gene_meta)\n\n\npbmc_cell_frequency | Removed 550 specimens because missing in meta data\n\n\nplasma_ab_titer | Removed 6931 specimens because missing in meta data\n\n\nplasma_cytokine_concentration_by_olink | Removed 495 specimens because missing in meta data\n\n\npbmc_cell_frequency | Removed 56 features because not in feature subset\n\n\nplasma_ab_titer | Removed 48 features because not in feature subset\n\n\nplasma_cytokine_concentration_by_olink | Removed 234 features because not in feature subset\n\n\nt_cell_polarization | Removed 3 features because not in feature subset\n\n\nplasma_cytokine_concentration_by_olink | Removed 300 features because qc warning\n\n\nplasma_ab_titer | Removed 10540 measurements because wrong unit used\n\n\nplasma_cytokine_concentration_by_olink | Removed 2400 measurements because wrong unit used\n\n\nplasma_cytokine_concentration_by_legendplex | Removed 8 because specimen is outlier\n\n\nCode\nwide_exp_data &lt;- generate_wide_experimental_data(experimental_data=exp_data, impute=NULL)\n\ncelltype_meta &lt;- read_celltype_meta(input_dir)\ngene_meta &lt;- read_gene_meta(input_dir)\nprotein_meta &lt;- read_protein_meta(input_dir)\n\n\n\n\n3 Checks\n\n\nCode\n# only works due to filtering step above\nstopifnot(all(\n  purrr::map_lgl(exp_data, ~ all(.x$specimen_id %in% meta_data$specimen_id)))\n)\n\n# no subject is recorded in more than one dataset\n(meta_data %&gt;%\n  dplyr::count(subject_id, dataset) %&gt;%\n  dplyr::count(subject_id) %&gt;%\n  dplyr::pull(n) == 1) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\n# we have the baseline specimen (planned_day_relative_to_boost = 0) for every subject\n(meta_data %&gt;%\n  dplyr::select(subject_id, planned_day_relative_to_boost, dataset) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(is_baseline = (planned_day_relative_to_boost==0)) %&gt;%\n  dplyr::group_by(subject_id) %&gt;%\n  dplyr::summarize(baseline_present = any(is_baseline),\n                   dataset = first(dataset)) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarize(baseline_present_frac = mean(baseline_present)) %&gt;%\n  pull(baseline_present_frac) == 1) %&gt;%\n  all() %&gt;%\n  stopifnot()\n\nstopifnot(all(\n  purrr::map_lgl(exp_data, function(df) {\n    if (\"unit\" %in% colnames(df)) {\n      return(length(unique(df[[\"unit\"]])) == 1)\n    } else {\n      return(TRUE)\n    }\n  })\n))\n\n\n\n\n4 MOFA\n\nhttps://biofam.github.io/MOFA2/index.html\nhttps://raw.githack.com/bioFAM/MOFA2_tutorials/master/R_tutorials/getting_started_R.html\nhttps://raw.githack.com/bioFAM/MOFA2_tutorials/master/R_tutorials/downstream_analysis.html\n\n\n\nCode\n# filter genes and normalize the gene expression data\nmin_counts &lt;- 200\nmin_samples &lt;- 20\ngenes_to_keep &lt;- colnames(wide_exp_data$pbmc_gene_expression)[\n  (colSums(wide_exp_data$pbmc_gene_expression) &gt;= min_counts) &\n    (colSums(wide_exp_data$pbmc_gene_expression &gt; 0) &gt;= min_samples)\n]\ntarget_sum &lt;- 1e6\npbmc_gene_expression_norm &lt;- \n  wide_exp_data$pbmc_gene_expression / rowSums(wide_exp_data$pbmc_gene_expression) * target_sum\nstopifnot(all(dplyr::near(rowSums(pbmc_gene_expression_norm), target_sum, tol=0.1)))\npbmc_gene_expression_norm &lt;- pbmc_gene_expression_norm[ , genes_to_keep]\npbmc_gene_expression_log &lt;- log1p(pbmc_gene_expression_norm)\nwide_exp_data$pbmc_gene_expression &lt;- pbmc_gene_expression_log\n\nbaseline_specimen &lt;- meta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  dplyr::pull(specimen_id)\n\nassay_specimen &lt;- purrr::map(wide_exp_data, ~ rownames(.x)) %&gt;% \n  unlist() %&gt;% \n  unique()\n\nintersect_specimen &lt;- dplyr::intersect(baseline_specimen, assay_specimen)\n\ngroup_vec &lt;- (meta_data %&gt;% column_to_rownames(var=\"specimen_id\"))[intersect_specimen, ]$dataset\ngroup_vec &lt;- str_replace(group_vec, \"_dataset\", \"_d\")\n\nmofa_data &lt;- purrr::imap(wide_exp_data, function(mtx, modality) {\n  # mtx &lt;- wide_exp_data$pbmc_cell_frequency\n  specimen_in_modality &lt;- intersect_specimen[intersect_specimen %in% rownames(mtx)]\n  out_mtx &lt;- matrix(data=NA, nrow=ncol(mtx), ncol=length(intersect_specimen))\n  rownames(out_mtx) &lt;- colnames(mtx)\n  colnames(out_mtx) &lt;- intersect_specimen\n  out_mtx[, specimen_in_modality] &lt;- t(mtx[specimen_in_modality, ])\n  print(paste0(modality, \" | Fraction of NAs: \", mean(is.na(out_mtx))))\n  return(out_mtx)\n})\n\n\n[1] \"pbmc_cell_frequency | Fraction of NAs: 0.19205298013245\"\n[1] \"pbmc_gene_expression | Fraction of NAs: 0.033112582781457\"\n[1] \"plasma_ab_titer | Fraction of NAs: 0.28476821192053\"\n[1] \"plasma_cytokine_concentration_by_legendplex | Fraction of NAs: 0.317880794701987\"\n[1] \"plasma_cytokine_concentration_by_olink | Fraction of NAs: 0.426098735701385\"\n[1] \"t_cell_activation | Fraction of NAs: 0.339403973509934\"\n[1] \"t_cell_polarization | Fraction of NAs: 0.384105960264901\"\n\n\nCode\nMOFAobject &lt;- MOFA2::create_mofa_from_matrix(mofa_data, groups=group_vec)\n\n\nWarning in .rename_duplicated_features(object): There are duplicated features names across different views. We will add the suffix *_view* only for those features \n            Example: if you have both TP53 in mRNA and mutation data it will be renamed to TP53_mRNA, TP53_mutation\n\n\nCode\nplot_data_overview(MOFAobject) + ggdark::dark_mode()\n\n\nInverted geom defaults of fill and color/colour.\nTo change them back, use invert_geom_defaults().\n\n\n\n\n\n\n\n\n\n\nDefine data options\n\nscale_groups: if groups have different ranges/variances, it is good practice to scale each group to unit variance. Default is FALSE\nscale_views: if views have different ranges/variances, it is good practice to scale each view to unit variance. Default is FALSE\n\n\n\n\nCode\ndata_opts &lt;- get_default_data_options(MOFAobject)\nhead(data_opts)\n\n\n$scale_views\n[1] FALSE\n\n$scale_groups\n[1] FALSE\n\n$center_groups\n[1] TRUE\n\n$use_float32\n[1] TRUE\n\n$views\n[1] \"pbmc_cell_frequency\"                        \n[2] \"pbmc_gene_expression\"                       \n[3] \"plasma_ab_titer\"                            \n[4] \"plasma_cytokine_concentration_by_legendplex\"\n[5] \"plasma_cytokine_concentration_by_olink\"     \n[6] \"t_cell_activation\"                          \n[7] \"t_cell_polarization\"                        \n\n$groups\n[1] \"2020_d\" \"2021_d\" \"2022_d\" \"2023_d\"\n\n\n\nDefine model options\n\nnum_factors: number of factors\nlikelihoods: likelihood per view (options are “gaussian”, “poisson”, “bernoulli”). By default they are learnt automatically. We advise users to use “gaussian” whenever possible!\nspikeslab_factors: use spike-slab sparsity prior in the factors? default is FALSE.\nspikeslab_weights: use spike-slab sparsity prior in the weights? default is TRUE.\nard_factors: use ARD prior in the factors? Default is TRUE if using multiple groups.\nard_weights: use ARD prior in the weights? Default is TRUE if using multiple views.\n\n\n\n\nCode\nmodel_opts &lt;- get_default_model_options(MOFAobject)\nhead(model_opts)\n\n\n$likelihoods\n                        pbmc_cell_frequency \n                                 \"gaussian\" \n                       pbmc_gene_expression \n                                 \"gaussian\" \n                            plasma_ab_titer \n                                 \"gaussian\" \nplasma_cytokine_concentration_by_legendplex \n                                 \"gaussian\" \n     plasma_cytokine_concentration_by_olink \n                                 \"gaussian\" \n                          t_cell_activation \n                                 \"gaussian\" \n                        t_cell_polarization \n                                 \"gaussian\" \n\n$num_factors\n[1] 15\n\n$spikeslab_factors\n[1] FALSE\n\n$spikeslab_weights\n[1] FALSE\n\n$ard_factors\n[1] TRUE\n\n$ard_weights\n[1] TRUE\n\n\n\nDefine train options\n\nmaxiter: number of iterations. Default is 1000.\nconvergence_mode: “fast”, “medium”, “slow”. For exploration, the fast mode is good enough.\nstartELBO: initial iteration to compute the ELBO (the objective function used to assess convergence).\nfreqELBO: frequency of computations of the ELBO.\ngpu_mode: use GPU mode? (needs cupy installed and a functional GPU).\nstochastic: use stochastic inference? (default is FALSE).\nverbose: verbose mode?\nseed: random seed\n\n\n\n\nCode\ntrain_opts &lt;- get_default_training_options(MOFAobject)\nhead(train_opts)\n\n\n$maxiter\n[1] 1000\n\n$convergence_mode\n[1] \"fast\"\n\n$drop_factor_threshold\n[1] -1\n\n$verbose\n[1] FALSE\n\n$startELBO\n[1] 1\n\n$freqELBO\n[1] 5\n\n\n\n\nCode\nMOFAobject &lt;- prepare_mofa(\n  object = MOFAobject,\n  data_options = data_opts,\n  model_options = model_opts,\n  training_options = train_opts\n)\n\n\nWarning in prepare_mofa(object = MOFAobject, data_options = data_opts,\nmodel_options = model_opts, : Some view(s) have less than 15 features, MOFA\nwill have little power to to learn meaningful factors for these view(s)....\n\n\nWarning in prepare_mofa(object = MOFAobject, data_options = data_opts,\nmodel_options = model_opts, : Some view(s) have a lot of features, it is\nrecommended to perform a more stringent feature selection before creating the\nMOFA object....\n\n\n\n# Multi-group mode requested.\n\n\n\nThis is an advanced option, if this is the first time that you are running MOFA, we suggest that you try do some exploration first without specifying groups. Two important remarks:\n\n\n\n - The aim of the multi-group framework is to identify the sources of variability *within* the groups. If your aim is to find a factor that 'separates' the groups, you DO NOT want to use the multi-group framework. Please see the FAQ on the MOFA2 webpage.\n\n\n\n - It is important to account for the group effect before selecting highly variable features (HVFs). We suggest that either you calculate HVFs per group and then take the union, or regress out the group effect before HVF selection\n\n\nChecking data options...\n\n\nChecking training options...\n\n\nChecking model options...\n\n\n\n\nCode\noutfile = file.path(getwd(), \"model.hdf5\")\nMOFAobject.trained &lt;- run_mofa(MOFAobject, outfile)\n\n\nWarning: Output file /Users/pschafer/Projects/cmi_pb_third_challenge/eda/model.hdf5 already exists, it will be replaced\n\n\nConnecting to the mofapy2 python package using reticulate (use_basilisk = FALSE)... \n    Please make sure to manually specify the right python binary when loading R with reticulate::use_python(..., force=TRUE) or the right conda environment with reticulate::use_condaenv(..., force=TRUE)\n    If you prefer to let us automatically install a conda environment with 'mofapy2' installed using the 'basilisk' package, please use the argument 'use_basilisk = TRUE'\n\n\nWarning in run_mofa(MOFAobject, outfile): The latest mofapy2 version is 0.7.0,\nyou are using 0.7.1. Please upgrade with 'pip install mofapy2'\n\n\n\n        #########################################################\n        ###           __  __  ____  ______                    ### \n        ###          |  \\/  |/ __ \\|  ____/\\    _             ### \n        ###          | \\  / | |  | | |__ /  \\ _| |_           ### \n        ###          | |\\/| | |  | |  __/ /\\ \\_   _|          ###\n        ###          | |  | | |__| | | / ____ \\|_|            ###\n        ###          |_|  |_|\\____/|_|/_/    \\_\\              ###\n        ###                                                   ### \n        ######################################################### \n       \n \n        \nuse_float32 set to True: replacing float64 arrays by float32 arrays to speed up computations...\n\nSuccessfully loaded view='pbmc_cell_frequency' group='2020_d' with N=40 samples and D=10 features...\nSuccessfully loaded view='pbmc_cell_frequency' group='2021_d' with N=36 samples and D=10 features...\nSuccessfully loaded view='pbmc_cell_frequency' group='2022_d' with N=21 samples and D=10 features...\nSuccessfully loaded view='pbmc_cell_frequency' group='2023_d' with N=54 samples and D=10 features...\nSuccessfully loaded view='pbmc_gene_expression' group='2020_d' with N=40 samples and D=30441 features...\nSuccessfully loaded view='pbmc_gene_expression' group='2021_d' with N=36 samples and D=30441 features...\nSuccessfully loaded view='pbmc_gene_expression' group='2022_d' with N=21 samples and D=30441 features...\nSuccessfully loaded view='pbmc_gene_expression' group='2023_d' with N=54 samples and D=30441 features...\nSuccessfully loaded view='plasma_ab_titer' group='2020_d' with N=40 samples and D=35 features...\nSuccessfully loaded view='plasma_ab_titer' group='2021_d' with N=36 samples and D=35 features...\nSuccessfully loaded view='plasma_ab_titer' group='2022_d' with N=21 samples and D=35 features...\nSuccessfully loaded view='plasma_ab_titer' group='2023_d' with N=54 samples and D=35 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_legendplex' group='2020_d' with N=40 samples and D=14 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_legendplex' group='2021_d' with N=36 samples and D=14 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_legendplex' group='2022_d' with N=21 samples and D=14 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_legendplex' group='2023_d' with N=54 samples and D=14 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_olink' group='2020_d' with N=40 samples and D=44 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_olink' group='2021_d' with N=36 samples and D=44 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_olink' group='2022_d' with N=21 samples and D=44 features...\nSuccessfully loaded view='plasma_cytokine_concentration_by_olink' group='2023_d' with N=54 samples and D=44 features...\nSuccessfully loaded view='t_cell_activation' group='2020_d' with N=40 samples and D=4 features...\nSuccessfully loaded view='t_cell_activation' group='2021_d' with N=36 samples and D=4 features...\nSuccessfully loaded view='t_cell_activation' group='2022_d' with N=21 samples and D=4 features...\nSuccessfully loaded view='t_cell_activation' group='2023_d' with N=54 samples and D=4 features...\nSuccessfully loaded view='t_cell_polarization' group='2020_d' with N=40 samples and D=6 features...\nSuccessfully loaded view='t_cell_polarization' group='2021_d' with N=36 samples and D=6 features...\nSuccessfully loaded view='t_cell_polarization' group='2022_d' with N=21 samples and D=6 features...\nSuccessfully loaded view='t_cell_polarization' group='2023_d' with N=54 samples and D=6 features...\n\n\nModel options:\n- Automatic Relevance Determination prior on the factors: True\n- Automatic Relevance Determination prior on the weights: True\n- Spike-and-slab prior on the factors: False\n- Spike-and-slab prior on the weights: False\nLikelihoods:\n- View 0 (pbmc_cell_frequency): gaussian\n- View 1 (pbmc_gene_expression): gaussian\n- View 2 (plasma_ab_titer): gaussian\n- View 3 (plasma_cytokine_concentration_by_legendplex): gaussian\n- View 4 (plasma_cytokine_concentration_by_olink): gaussian\n- View 5 (t_cell_activation): gaussian\n- View 6 (t_cell_polarization): gaussian\n\n\n\nWarning: some view(s) have less than 15 features, MOFA won't be able to learn meaningful factors for these view(s)...\n\n\n\n######################################\n## Training the model with seed 42 ##\n######################################\n\n\nELBO before training: -18287496579.50 \n\nIteration 1: time=0.38, ELBO=-5474940.22, deltaELBO=18282021639.276 (99.97006184%), Factors=15\nIteration 2: time=0.39, Factors=15\nIteration 3: time=0.40, Factors=15\nIteration 4: time=0.44, Factors=15\nIteration 5: time=0.39, Factors=15\nIteration 6: time=0.39, ELBO=716274.38, deltaELBO=6191214.600 (0.03385491%), Factors=15\nIteration 7: time=0.37, Factors=15\nIteration 8: time=0.39, Factors=15\nIteration 9: time=0.38, Factors=15\nIteration 10: time=0.37, Factors=15\nIteration 11: time=0.42, ELBO=860389.15, deltaELBO=144114.775 (0.00078805%), Factors=15\nIteration 12: time=0.39, Factors=15\nIteration 13: time=0.37, Factors=15\nIteration 14: time=0.38, Factors=15\nIteration 15: time=0.37, Factors=15\nIteration 16: time=0.40, ELBO=886660.34, deltaELBO=26271.186 (0.00014366%), Factors=15\nIteration 17: time=0.38, Factors=15\nIteration 18: time=0.38, Factors=15\nIteration 19: time=0.37, Factors=15\nIteration 20: time=0.37, Factors=15\nIteration 21: time=0.38, ELBO=894420.16, deltaELBO=7759.820 (0.00004243%), Factors=15\n\nConverged!\n\n\n\n#######################\n## Training finished ##\n#######################\n\n\nWarning: Output file /Users/pschafer/Projects/cmi_pb_third_challenge/eda/model.hdf5 already exists, it will be replaced\nSaving model in /Users/pschafer/Projects/cmi_pb_third_challenge/eda/model.hdf5...\n\n\nWarning in .quality_control(object, verbose = verbose): Factor(s) 2 are strongly correlated with the total number of expressed features for at least one of your omics. Such factors appear when there are differences in the total 'levels' between your samples, *sometimes* because of poor normalisation in the preprocessing steps.\n\n\n\n\nCode\nmodel &lt;- load_model(outfile)\n\n\nWarning in .quality_control(object, verbose = verbose): Factor(s) 2 are strongly correlated with the total number of expressed features for at least one of your omics. Such factors appear when there are differences in the total 'levels' between your samples, *sometimes* because of poor normalisation in the preprocessing steps.\n\n\n\n\nCode\nplot_variance_explained(model, x=\"view\", y=\"factor\") +\n  ggdark::dark_mode(verbose=FALSE) +\n  theme(axis.text.x = element_text(angle=90, hjust=1))\n\n\n\n\n\n\n\n\n\n\n\nCode\nplot_variance_explained(model, x=\"group\", y=\"factor\", plot_total = T)[[2]] +\n  ggdark::dark_mode(verbose=FALSE)\n\n\nWarning: Removed 5 rows containing missing values or values outside the scale range\n(`geom_bar()`)."
  },
  {
    "objectID": "eda/filtered_data_overview.html",
    "href": "eda/filtered_data_overview.html",
    "title": "Data Overview",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(ggdark)\n  library(factoextra)\n  library(FactoMineR)\n  library(magick)\n  library(ComplexHeatmap)\n  library(circlize)\n})\n\nsource(file.path(\"..\", \"src\", \"read_data.R\"))\nsource(file.path(\"..\", \"src\", \"colors.R\"))"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "href": "eda/filtered_data_overview.html#how-many-subjects-do-we-have-per-dataset-per-partition",
    "title": "Data Overview",
    "section": "4.1 How many subjects do we have per dataset / per partition?",
    "text": "4.1 How many subjects do we have per dataset / per partition?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, dataset, partition, infancy_vac) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::count(dataset, partition, infancy_vac) %&gt;%\n  ggplot(aes(x = n, y = dataset, fill = infancy_vac, color = partition)) +\n  geom_col(position = position_dodge(width = 0.9), width = 0.7, alpha=0.5) +  \n  geom_text(aes(label = n), \n            position = position_dodge(width = 0.9),  \n            hjust = -0.2, vjust = 0.5, size = 3, color = \"white\") +\n  scale_fill_manual(values = infancy_vac_colors) +\n  scale_color_manual(values = partition_colors) +\n  ggdark::dark_mode(verbose = FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-age-range",
    "href": "eda/filtered_data_overview.html#what-is-the-age-range",
    "title": "Data Overview",
    "section": "4.2 What is the age range",
    "text": "4.2 What is the age range\n\n\nCode\nmeta_data %&gt;%\n  ggplot() + \n  geom_histogram(aes(x=age_at_boost, fill=dataset, y=after_stat(density)), \n                 color=\"black\", position=\"identity\", bins=30) +\n  facet_wrap(~dataset) +\n  scale_fill_manual(values=dataset_colors) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "href": "eda/filtered_data_overview.html#what-is-the-difference-between-planned-and-actual-booster-administration",
    "title": "Data Overview",
    "section": "5.1 What is the difference between planned and actual booster administration",
    "text": "5.1 What is the difference between planned and actual booster administration\n\n\nCode\nmeta_data %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=diff_relative_to_boost), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "href": "eda/filtered_data_overview.html#what-is-the-difference-between-planned-and-actual-for-the-baseline",
    "title": "Data Overview",
    "section": "5.2 What is the difference between planned and actual for the baseline",
    "text": "5.2 What is the difference between planned and actual for the baseline\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  dplyr::mutate(`diff_&gt;_15` = abs(actual_day_relative_to_boost) &gt; 15) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=actual_day_relative_to_boost, fill=`diff_&gt;_15`), binwidth=1) +\n  facet_wrap(~dataset) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-many-time-points-do-we-have-per-subject",
    "href": "eda/filtered_data_overview.html#how-many-time-points-do-we-have-per-subject",
    "title": "Data Overview",
    "section": "5.3 How many time points do we have per subject?",
    "text": "5.3 How many time points do we have per subject?\n\n\nCode\nmeta_data %&gt;%\n  dplyr::count(dataset, subject_id) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset),color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "href": "eda/filtered_data_overview.html#how-many-assays-do-we-have-for-the-baseline-measurement",
    "title": "Data Overview",
    "section": "5.4 How many assays do we have for the baseline measurement?",
    "text": "5.4 How many assays do we have for the baseline measurement?\n\n\nCode\nassays_per_specimen &lt;- purrr::imap(exp_data, ~ .x %&gt;% \n              dplyr::select(specimen_id) %&gt;%\n              dplyr::distinct() %&gt;%\n              dplyr::mutate(assay=.y)) %&gt;%\n  dplyr::bind_rows() %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, assay, subject_id, planned_day_relative_to_boost, infancy_vac, dataset)\n\nassays_per_specimen %&gt;%\n  dplyr::count(subject_id, planned_day_relative_to_boost, dataset, specimen_id) %&gt;%\n  dplyr::filter(!is.na(subject_id)) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==0) %&gt;%\n  ggplot() +\n  geom_histogram(aes(x=n, fill=dataset), color=\"black\", binwidth=1) +\n  facet_wrap(~dataset, ncol=2) +\n  ggdark::dark_mode(verbose=FALSE) +\n  scale_x_continuous(breaks=seq(0, 8, 1)) +\n  scale_fill_manual(values=dataset_colors)\n\n\n\n\n\n\n\n\n\n\n\nCode\nfor (day in c(0, 1, 3, 14)) {\n  \nannotation_data &lt;- meta_data %&gt;%\n  dplyr::select(specimen_id, planned_day_relative_to_boost, infancy_vac, \n                dataset, biological_sex) %&gt;%\n  dplyr::filter(specimen_id %in% assays_per_specimen$specimen_id) %&gt;%\n  dplyr::filter(planned_day_relative_to_boost == !!day) %&gt;% \n  dplyr::select(- planned_day_relative_to_boost) %&gt;%\n  dplyr::arrange(dataset, infancy_vac, biological_sex) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  dplyr::select(dataset, infancy_vac, biological_sex)\n\nheatmap_data &lt;- assays_per_specimen %&gt;%\n  dplyr::select(specimen_id, assay) %&gt;%\n  dplyr::mutate(value = 1) %&gt;%\n  tidyr::pivot_wider(names_from=\"assay\", values_from=\"value\") %&gt;%\n  mutate(across(everything(), .fns = ~replace_na(.,0))) %&gt;%\n  tibble::column_to_rownames(\"specimen_id\") %&gt;%\n  as.matrix() %&gt;%\n  t()\n\ncolnames(heatmap_data) &lt;- as.character(colnames(heatmap_data))\nheatmap_data &lt;- heatmap_data[, rownames(annotation_data)]\n\n# Create the heatmap\nht &lt;- Heatmap(heatmap_data, \n              name = \"heatmap\", \n              row_title = \"\", \n              column_title = paste0(\"Specimens for Planned Day \", day),\n              col = colorRamp2(c(0, 1), c(\"white\", \"black\")),\n              cluster_rows = FALSE,\n              cluster_columns = FALSE,\n              show_row_names = TRUE, \n              show_column_names = FALSE,\n              width = unit(16, \"cm\"),\n              top_annotation = ComplexHeatmap::HeatmapAnnotation(df = annotation_data,\n                                    col = list(\n                                      \"dataset\" = dataset_colors,\n                                      \"infancy_vac\" = infancy_vac_colors,\n                                      \"biological_sex\" = sex_colors\n                                    ),\n                                    which=\"column\")\n)\n\ndraw(ht, \n     heatmap_legend_side = \"top\",\n     annotation_legend_side = \"top\",\n     show_heatmap_legend = FALSE # don't show colorbar\n     )\n}"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "href": "eda/filtered_data_overview.html#how-many-subjects-can-we-use-to-construct-training-data",
    "title": "Data Overview",
    "section": "6.1 How many subjects can we use to construct training data?",
    "text": "6.1 How many subjects can we use to construct training data?\n\n6.1.1 1) Antibody Level Tasks (anti-PT 14 days after booster)\n\nAll but 7 people were assayed approximately 14 days after the booster administration\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_1_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==14) %&gt;%\n                                     dplyr::left_join(exp_data$plasma_ab_titer,\n                                                      by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(isotype_antigen==\"IgG_PT\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_1_possible_total = sum(task_1_possible), \n                   task_1_possible_fraction = mean(task_1_possible))\n\n\n\n  \n\n\n\n\n\n6.1.2 2) Cell Frequency Tasks (Monocytes 1 day after booster)\n\nBut there is one person where it does not really make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==1) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_cell_frequency, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(cell_type_name==\"Monocytes\") %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))\n\n\n\n  \n\n\n\n\n\n6.1.3 3) Gene Expression Tasks (CCL3 expression 3 days after booster)\n\nThere are 7 people for which this task does nto make sense\n\n\n\nCode\nmeta_data %&gt;%\n  dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n  ggplot(aes(x=diff_relative_to_boost)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\nCode\nall_genes &lt;- unique(exp_data$pbmc_gene_expression$versioned_ensembl_gene_id)\nccl3_ensembl &lt;- \"ENSG00000277632\"\nccl3_ensembl_versioned &lt;- all_genes[str_starts(all_genes, ccl3_ensembl)]\n\nmeta_data %&gt;%\n  dplyr::select(subject_id, infancy_vac, dataset, biological_sex, ethnicity, race, year_of_birth) %&gt;%\n  dplyr::distinct() %&gt;%\n  dplyr::mutate(task_possible = \n                  subject_id %in% (meta_data %&gt;%\n                                     dplyr::filter(planned_day_relative_to_boost==3) %&gt;%\n                                     dplyr::left_join(exp_data$pbmc_gene_expression, by=\"specimen_id\") %&gt;%\n                                     dplyr::filter(versioned_ensembl_gene_id==ccl3_ensembl_versioned) %&gt;%\n                                     tidyr::drop_na() %&gt;%\n                                     dplyr::pull(subject_id))\n  ) %&gt;%\n  dplyr::group_by(dataset) %&gt;%\n  dplyr::summarise(task_possible_total = sum(task_possible), \n                   task_possible_fraction = mean(task_possible))"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-many-na-values-do-we-have-per-assay",
    "href": "eda/filtered_data_overview.html#how-many-na-values-do-we-have-per-assay",
    "title": "Data Overview",
    "section": "7.1 How many NA values do we have per assay?",
    "text": "7.1 How many NA values do we have per assay?\n\n\nCode\npurrr::imap(exp_data, function(df, modality) {\n  feature_col &lt;- experimental_data_settings[[modality]]$feature_col\n  value_col &lt;- experimental_data_settings[[modality]]$value_col\n  tibble(modality = modality, feature_col = feature_col, sum_na = sum(is.na(df[[value_col]])))\n}) %&gt;%\n  dplyr::bind_rows()"
  },
  {
    "objectID": "eda/filtered_data_overview.html#wide-format",
    "href": "eda/filtered_data_overview.html#wide-format",
    "title": "Data Overview",
    "section": "7.2 Wide format",
    "text": "7.2 Wide format\n\n\nCode\npurrr::imap_dfr(generate_wide_experimental_data(experimental_data=exp_data, \n                                                impute=NULL),\n                  function(mtx, modality) {\n                    rmeans &lt;- rowMeans(is.na(mtx))\n                    tibble(modality=modality, \n                           subject_id = names(rmeans), \n                           na_frac=rmeans)\n           }) %&gt;%\n  dplyr::group_by(modality) %&gt;%\n  dplyr::summarise(mean_na_frac = mean(na_frac))"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "href": "eda/filtered_data_overview.html#what-is-the-fraction-of-na-values-in-the-pbmc-cell-type-frequencies",
    "title": "Data Overview",
    "section": "7.3 What is the fraction of NA values in the PBMC Cell Type Frequencies",
    "text": "7.3 What is the fraction of NA values in the PBMC Cell Type Frequencies\nWith the current selection of cell types, there is no specimen with NA values.\n\n7.3.1 Per Cell Type\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(cell_type_name) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(cell_type_name = factor(cell_type_name, levels=rev(cell_type_name))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=cell_type_name, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Cell Type\")\n\n\n\n\n\n\n\n\n\n\n\n7.3.2 Per Cell Specimen\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::mutate(is_na = is.na(percent_live_cell)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "href": "eda/filtered_data_overview.html#what-is-the-fraction-of-na-values-in-the-olink-data",
    "title": "Data Overview",
    "section": "7.4 What is the fraction of NA values in the Olink Data?",
    "text": "7.4 What is the fraction of NA values in the Olink Data?\n\n7.4.1 Per Protein\nAfter excluding Q969D9, the largest fraction of NA values is about 5% which is acceptable I guess.\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::arrange(desc(frac_na)) %&gt;%\n  dplyr::mutate(protein_id = factor(protein_id, levels=rev(protein_id))) %&gt;%\n  ggplot() +\n  geom_col(aes(y=protein_id, x=frac_na)) +\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Protein\")\n\n\n\n\n\n\n\n\n\n\n\n7.4.2 Per Specimen\nThere are 6 specimen with more than 50% NA values, I am not sure whether I should exlcude those?\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  ggplot(aes(x = frac_na)) +\n  geom_histogram(bins = 20, color = \"white\", fill = \"blue\", alpha=0.1) +  # Add color for better visibility\n  stat_bin(aes(label = after_stat(count)), bins = 20, geom = \"text\", \n           vjust = -0.5, color = \"white\", size = 3) +  # Display bin counts at the top\n  ggdark::dark_mode(verbose=FALSE) +\n  labs(x=\"Fraction of NA Values per Specimen\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(is_na = is.na(concentration)) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarise(frac_na = sum(is_na) / n()) %&gt;%\n  dplyr::filter(frac_na &gt; 0.2) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::select(specimen_id, frac_na, subject_id, dataset, \n                actual_day_relative_to_boost, planned_day_relative_to_boost)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "href": "eda/filtered_data_overview.html#how-does-the-quality-control-for-olink-look-like",
    "title": "Data Overview",
    "section": "8.1 How does the quality control for Olink look like?",
    "text": "8.1 How does the quality control for Olink look like?\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::count(quality_control)\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)\n\n\n\n  \n\n\n\nCode\nexp_data$plasma_cytokine_concentration_by_legendplex %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  dplyr::count(partition, dataset)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "href": "eda/filtered_data_overview.html#how-often-is-the-cytokine-concentration-below-the-lod-in-olink",
    "title": "Data Overview",
    "section": "8.2 How often is the Cytokine Concentration below the LOD in Olink",
    "text": "8.2 How often is the Cytokine Concentration below the LOD in Olink\n\n\nCode\n# check how often is it below the limit of detection?\nexp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::count(below_lod)\n\n\n\n  \n\n\n\n\n\nCode\nset.seed(1)\np1 &lt;- exp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::mutate(qc_warning = quality_control == \"Warning\") %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarize(mean_below_lod = mean(below_lod, na.rm=TRUE),\n                   mean_qc_warning = mean(qc_warning, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(cytokine_uniprot_mapping, by=\"protein_id\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = mean_below_lod, y = mean_qc_warning)) +\n  ggrepel::geom_text_repel(aes(x = mean_below_lod, y = mean_qc_warning, \n                      label = ifelse(mean_below_lod &gt; 0.2, protein_id, '')),\n                  max.overlaps = Inf, color=\"grey\") + # This ensures all labels are shown\n  ggdark::dark_mode()\n\np2 &lt;- exp_data$plasma_cytokine_concentration_by_olink %&gt;%\n  dplyr::mutate(below_lod = concentration &lt; lower_limit_of_quantitation) %&gt;%\n  dplyr::mutate(qc_warning = quality_control == \"Warning\") %&gt;%\n  dplyr::group_by(protein_id) %&gt;%\n  dplyr::summarize(mean_below_lod = mean(below_lod, na.rm=TRUE),\n                   mean_qc_warning = mean(qc_warning, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(cytokine_uniprot_mapping, by=\"protein_id\") %&gt;%\n  ggplot() +\n  geom_point(aes(x = mean_below_lod, y = mean_qc_warning)) +\n  ggrepel::geom_text_repel(aes(x = mean_below_lod, y = mean_qc_warning, \n                      label = ifelse(mean_below_lod &gt; 0.2, cytokine, '')),\n                  max.overlaps = Inf, color=\"grey\") + # This ensures all labels are shown\n  ggdark::dark_mode()\n\ncowplot::plot_grid(p1, p2, ncol=2)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#what-is-the-fraction-of-unspecific-antibody-measurements",
    "href": "eda/filtered_data_overview.html#what-is-the-fraction-of-unspecific-antibody-measurements",
    "title": "Data Overview",
    "section": "8.3 What is the fraction of unspecific antibody measurements",
    "text": "8.3 What is the fraction of unspecific antibody measurements\n\n8.3.1 Per Isotype-Antigen\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(isotype_antigen) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(bins=30, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), bins=30, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\n\n8.3.2 Per Specimen\nSo in some specimen we have non-specific antibody measurements? What does that mean?\n\n\nCode\nexp_data$plasma_ab_titer %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(is_antigen_specific_fraction = mean(is_antigen_specific)) %&gt;%\n  ggplot(aes(x=is_antigen_specific_fraction)) +\n  geom_histogram(binwidth=1, color = \"white\", fill = \"blue\", alpha=0.1) +\n  stat_bin(aes(label = after_stat(count)), binwidth=1, geom = \"text\", vjust = -0.5, color = \"white\", size = 3) +  \n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#nk",
    "href": "eda/filtered_data_overview.html#nk",
    "title": "Data Overview",
    "section": "9.1 NK",
    "text": "9.1 NK\nThere are 3 types of NK cells:\n\nNK cells (CD3-CD19-CD56+): CD19-CD3-CD56+/++\nNK: CD19-CD3-CD56+\nCD56high NK cells: CD19-CD3-CD56++\n\nAnd I don’t know what to do with that information!"
  },
  {
    "objectID": "eda/filtered_data_overview.html#no-gating-info-for-2023",
    "href": "eda/filtered_data_overview.html#no-gating-info-for-2023",
    "title": "Data Overview",
    "section": "9.2 No Gating Info for 2023",
    "text": "9.2 No Gating Info for 2023\n\nI just assume it is the same as in 2022, but this might not be true since the data look so different"
  },
  {
    "objectID": "eda/filtered_data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "href": "eda/filtered_data_overview.html#no-gating-info-for-basophils-and-cd19-in-2020",
    "title": "Data Overview",
    "section": "9.3 No Gating Info for Basophils and CD19 in 2020",
    "text": "9.3 No Gating Info for Basophils and CD19 in 2020\n\nI just assume it is the same as in 2021 and 2022"
  },
  {
    "objectID": "eda/filtered_data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "href": "eda/filtered_data_overview.html#no-gating-info-for-non-pdcs-at-all",
    "title": "Data Overview",
    "section": "9.4 No Gating Info for non-pDCs at all",
    "text": "9.4 No Gating Info for non-pDCs at all\nNot sure how to fix this)\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level)) %&gt;%\n  dplyr::select(dataset, cell_type_name) %&gt;%\n  dplyr::distinct()"
  },
  {
    "objectID": "eda/filtered_data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "href": "eda/filtered_data_overview.html#should-the-proportions-sum-up-to-1-at-level-0",
    "title": "Data Overview",
    "section": "9.5 Should the Proportions sum up to 1 at level 0?",
    "text": "9.5 Should the Proportions sum up to 1 at level 0?\n\nTrying to take the hierarchical information into account, it still does not make sense\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)"
  },
  {
    "objectID": "eda/filtered_data_overview.html#difference-in-2023-dataset",
    "href": "eda/filtered_data_overview.html#difference-in-2023-dataset",
    "title": "Data Overview",
    "section": "9.6 Difference in 2023 Dataset",
    "text": "9.6 Difference in 2023 Dataset\n\nIt seems like the 2023 data are very very different, which makes me hesitant to use it for any kind of predictions on the challenge data. E.g. just looking at level 0 which should make sense I get the following\n\n\n\nCode\n# first check for NAs for the levels\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(is.na(level))\n\n\n\n  \n\n\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::filter(level == 0) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nEspecially, when completely ignoring the hierarchy in the gating information, I would expect to have more than 100% in percelt_live_cell_sum, but this is not true for the specimens from the 2023 dataset\n\n\n\nCode\nexp_data$pbmc_cell_frequency %&gt;%\n  dplyr::left_join((meta_data %&gt;%\n                      dplyr::select(specimen_id, dataset) %&gt;%\n                      dplyr::distinct()),\n                   by=\"specimen_id\") %&gt;%\n  dplyr::left_join((celltype_meta %&gt;%\n                      dplyr::select(cell_type_name, dataset, level) %&gt;%\n                      dplyr::distinct()),\n                    by=c(\"dataset\", \"cell_type_name\")) %&gt;%\n  dplyr::group_by(specimen_id) %&gt;%\n  dplyr::summarize(percent_live_cell_sum = sum(percent_live_cell, na.rm=TRUE)) %&gt;%\n  dplyr::left_join(meta_data, by=\"specimen_id\") %&gt;%\n  ggplot() +\n  geom_violin(aes(x=dataset, y=percent_live_cell_sum)) +\n  ggdark::dark_mode(verbose=FALSE)\n\n\n\n\n\n\n\n\n\n\nOr what I use a list of predefined cell types of interest?"
  }
]